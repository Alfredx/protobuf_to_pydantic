{
  "package": "validate_test",
  "filename": "example_proto/validate/demo.proto",
  "dependencies": [
    "google/protobuf/any.proto",
    "google/protobuf/empty.proto",
    "google/protobuf/duration.proto",
    "google/protobuf/timestamp.proto",
    "example_proto/common/validate.proto"
  ],
  "message_type": [
    {
      "name": "FloatTest",
      "field": [
        {
          "name": "const_test",
          "number": 1,
          "label": "LABEL_OPTIONAL",
          "type": "TYPE_FLOAT",
          "options": {
            "[validate.rules]": {
              "float": {
                "const": 1.0
              }
            }
          },
          "jsonName": "constTest"
        },
        {
          "name": "range_e_test",
          "number": 2,
          "label": "LABEL_OPTIONAL",
          "type": "TYPE_FLOAT",
          "options": {
            "[validate.rules]": {
              "float": {
                "lte": 10.0,
                "gte": 1.0
              }
            }
          },
          "jsonName": "rangeETest"
        },
        {
          "name": "range_test",
          "number": 3,
          "label": "LABEL_OPTIONAL",
          "type": "TYPE_FLOAT",
          "options": {
            "[validate.rules]": {
              "float": {
                "lt": 10.0,
                "gt": 1.0
              }
            }
          },
          "jsonName": "rangeTest"
        },
        {
          "name": "in_test",
          "number": 4,
          "label": "LABEL_OPTIONAL",
          "type": "TYPE_FLOAT",
          "options": {
            "[validate.rules]": {
              "float": {
                "in": [
                  1.0,
                  2.0,
                  3.0
                ]
              }
            }
          },
          "jsonName": "inTest"
        },
        {
          "name": "not_in_test",
          "number": 5,
          "label": "LABEL_OPTIONAL",
          "type": "TYPE_FLOAT",
          "options": {
            "[validate.rules]": {
              "float": {
                "notIn": [
                  1.0,
                  2.0,
                  3.0
                ]
              }
            }
          },
          "jsonName": "notInTest"
        },
        {
          "name": "ignore_test",
          "number": 6,
          "label": "LABEL_OPTIONAL",
          "type": "TYPE_FLOAT",
          "options": {
            "[validate.rules]": {
              "float": {
                "ignoreEmpty": true
              }
            }
          },
          "jsonName": "ignoreTest"
        }
      ]
    },
    {
      "name": "DoubleTest",
      "field": [
        {
          "name": "const_test",
          "number": 1,
          "label": "LABEL_OPTIONAL",
          "type": "TYPE_DOUBLE",
          "options": {
            "[validate.rules]": {
              "double": {
                "const": 1.0
              }
            }
          },
          "jsonName": "constTest"
        },
        {
          "name": "range_e_test",
          "number": 2,
          "label": "LABEL_OPTIONAL",
          "type": "TYPE_DOUBLE",
          "options": {
            "[validate.rules]": {
              "double": {
                "lte": 10.0,
                "gte": 1.0
              }
            }
          },
          "jsonName": "rangeETest"
        },
        {
          "name": "range_test",
          "number": 3,
          "label": "LABEL_OPTIONAL",
          "type": "TYPE_DOUBLE",
          "options": {
            "[validate.rules]": {
              "double": {
                "lt": 10.0,
                "gt": 1.0
              }
            }
          },
          "jsonName": "rangeTest"
        },
        {
          "name": "in_test",
          "number": 4,
          "label": "LABEL_OPTIONAL",
          "type": "TYPE_DOUBLE",
          "options": {
            "[validate.rules]": {
              "double": {
                "in": [
                  1.0,
                  2.0,
                  3.0
                ]
              }
            }
          },
          "jsonName": "inTest"
        },
        {
          "name": "not_in_test",
          "number": 5,
          "label": "LABEL_OPTIONAL",
          "type": "TYPE_DOUBLE",
          "options": {
            "[validate.rules]": {
              "double": {
                "notIn": [
                  1.0,
                  2.0,
                  3.0
                ]
              }
            }
          },
          "jsonName": "notInTest"
        },
        {
          "name": "ignore_test",
          "number": 6,
          "label": "LABEL_OPTIONAL",
          "type": "TYPE_DOUBLE",
          "options": {
            "[validate.rules]": {
              "double": {
                "ignoreEmpty": true
              }
            }
          },
          "jsonName": "ignoreTest"
        }
      ]
    },
    {
      "name": "Int32Test",
      "field": [
        {
          "name": "const_test",
          "number": 1,
          "label": "LABEL_OPTIONAL",
          "type": "TYPE_INT32",
          "options": {
            "[validate.rules]": {
              "int32": {
                "const": 1
              }
            }
          },
          "jsonName": "constTest"
        },
        {
          "name": "range_e_test",
          "number": 2,
          "label": "LABEL_OPTIONAL",
          "type": "TYPE_INT32",
          "options": {
            "[validate.rules]": {
              "int32": {
                "lte": 10,
                "gte": 1
              }
            }
          },
          "jsonName": "rangeETest"
        },
        {
          "name": "range_test",
          "number": 3,
          "label": "LABEL_OPTIONAL",
          "type": "TYPE_INT32",
          "options": {
            "[validate.rules]": {
              "int32": {
                "lt": 10,
                "gt": 1
              }
            }
          },
          "jsonName": "rangeTest"
        },
        {
          "name": "in_test",
          "number": 4,
          "label": "LABEL_OPTIONAL",
          "type": "TYPE_INT32",
          "options": {
            "[validate.rules]": {
              "int32": {
                "in": [
                  1,
                  2,
                  3
                ]
              }
            }
          },
          "jsonName": "inTest"
        },
        {
          "name": "not_in_test",
          "number": 5,
          "label": "LABEL_OPTIONAL",
          "type": "TYPE_INT32",
          "options": {
            "[validate.rules]": {
              "int32": {
                "notIn": [
                  1,
                  2,
                  3
                ]
              }
            }
          },
          "jsonName": "notInTest"
        },
        {
          "name": "ignore_test",
          "number": 6,
          "label": "LABEL_OPTIONAL",
          "type": "TYPE_INT32",
          "options": {
            "[validate.rules]": {
              "int32": {
                "ignoreEmpty": true
              }
            }
          },
          "jsonName": "ignoreTest"
        }
      ]
    },
    {
      "name": "Uint32Test",
      "field": [
        {
          "name": "const_test",
          "number": 1,
          "label": "LABEL_OPTIONAL",
          "type": "TYPE_UINT32",
          "options": {
            "[validate.rules]": {
              "uint32": {
                "const": 1
              }
            }
          },
          "jsonName": "constTest"
        },
        {
          "name": "range_e_test",
          "number": 2,
          "label": "LABEL_OPTIONAL",
          "type": "TYPE_UINT32",
          "options": {
            "[validate.rules]": {
              "uint32": {
                "lte": 10,
                "gte": 1
              }
            }
          },
          "jsonName": "rangeETest"
        },
        {
          "name": "range_test",
          "number": 3,
          "label": "LABEL_OPTIONAL",
          "type": "TYPE_UINT32",
          "options": {
            "[validate.rules]": {
              "uint32": {
                "lt": 10,
                "gt": 1
              }
            }
          },
          "jsonName": "rangeTest"
        },
        {
          "name": "in_test",
          "number": 4,
          "label": "LABEL_OPTIONAL",
          "type": "TYPE_UINT32",
          "options": {
            "[validate.rules]": {
              "uint32": {
                "in": [
                  1,
                  2,
                  3
                ]
              }
            }
          },
          "jsonName": "inTest"
        },
        {
          "name": "not_in_test",
          "number": 5,
          "label": "LABEL_OPTIONAL",
          "type": "TYPE_UINT32",
          "options": {
            "[validate.rules]": {
              "uint32": {
                "notIn": [
                  1,
                  2,
                  3
                ]
              }
            }
          },
          "jsonName": "notInTest"
        },
        {
          "name": "ignore_test",
          "number": 6,
          "label": "LABEL_OPTIONAL",
          "type": "TYPE_UINT32",
          "options": {
            "[validate.rules]": {
              "uint32": {
                "ignoreEmpty": true
              }
            }
          },
          "jsonName": "ignoreTest"
        }
      ]
    },
    {
      "name": "Sint32Test",
      "field": [
        {
          "name": "const_test",
          "number": 1,
          "label": "LABEL_OPTIONAL",
          "type": "TYPE_SINT32",
          "options": {
            "[validate.rules]": {
              "sint32": {
                "const": 1
              }
            }
          },
          "jsonName": "constTest"
        },
        {
          "name": "range_e_test",
          "number": 2,
          "label": "LABEL_OPTIONAL",
          "type": "TYPE_SINT32",
          "options": {
            "[validate.rules]": {
              "sint32": {
                "lte": 10,
                "gte": 1
              }
            }
          },
          "jsonName": "rangeETest"
        },
        {
          "name": "range_test",
          "number": 3,
          "label": "LABEL_OPTIONAL",
          "type": "TYPE_SINT32",
          "options": {
            "[validate.rules]": {
              "sint32": {
                "lt": 10,
                "gt": 1
              }
            }
          },
          "jsonName": "rangeTest"
        },
        {
          "name": "in_test",
          "number": 4,
          "label": "LABEL_OPTIONAL",
          "type": "TYPE_SINT32",
          "options": {
            "[validate.rules]": {
              "sint32": {
                "in": [
                  1,
                  2,
                  3
                ]
              }
            }
          },
          "jsonName": "inTest"
        },
        {
          "name": "not_in_test",
          "number": 5,
          "label": "LABEL_OPTIONAL",
          "type": "TYPE_SINT32",
          "options": {
            "[validate.rules]": {
              "sint32": {
                "notIn": [
                  1,
                  2,
                  3
                ]
              }
            }
          },
          "jsonName": "notInTest"
        },
        {
          "name": "ignore_test",
          "number": 6,
          "label": "LABEL_OPTIONAL",
          "type": "TYPE_SINT32",
          "options": {
            "[validate.rules]": {
              "sint32": {
                "ignoreEmpty": true
              }
            }
          },
          "jsonName": "ignoreTest"
        }
      ]
    },
    {
      "name": "Int64Test",
      "field": [
        {
          "name": "const_test",
          "number": 1,
          "label": "LABEL_OPTIONAL",
          "type": "TYPE_INT64",
          "options": {
            "[validate.rules]": {
              "int64": {
                "const": "1"
              }
            }
          },
          "jsonName": "constTest"
        },
        {
          "name": "range_e_test",
          "number": 2,
          "label": "LABEL_OPTIONAL",
          "type": "TYPE_INT64",
          "options": {
            "[validate.rules]": {
              "int64": {
                "lte": "10",
                "gte": "1"
              }
            }
          },
          "jsonName": "rangeETest"
        },
        {
          "name": "range_test",
          "number": 3,
          "label": "LABEL_OPTIONAL",
          "type": "TYPE_INT64",
          "options": {
            "[validate.rules]": {
              "int64": {
                "lt": "10",
                "gt": "1"
              }
            }
          },
          "jsonName": "rangeTest"
        },
        {
          "name": "in_test",
          "number": 4,
          "label": "LABEL_OPTIONAL",
          "type": "TYPE_INT64",
          "options": {
            "[validate.rules]": {
              "int64": {
                "in": [
                  "1",
                  "2",
                  "3"
                ]
              }
            }
          },
          "jsonName": "inTest"
        },
        {
          "name": "not_in_test",
          "number": 5,
          "label": "LABEL_OPTIONAL",
          "type": "TYPE_INT64",
          "options": {
            "[validate.rules]": {
              "int64": {
                "notIn": [
                  "1",
                  "2",
                  "3"
                ]
              }
            }
          },
          "jsonName": "notInTest"
        },
        {
          "name": "ignore_test",
          "number": 6,
          "label": "LABEL_OPTIONAL",
          "type": "TYPE_INT64",
          "options": {
            "[validate.rules]": {
              "int64": {
                "ignoreEmpty": true
              }
            }
          },
          "jsonName": "ignoreTest"
        }
      ]
    },
    {
      "name": "Uint64Test",
      "field": [
        {
          "name": "const_test",
          "number": 1,
          "label": "LABEL_OPTIONAL",
          "type": "TYPE_UINT64",
          "options": {
            "[validate.rules]": {
              "uint64": {
                "const": "1"
              }
            }
          },
          "jsonName": "constTest"
        },
        {
          "name": "range_e_test",
          "number": 2,
          "label": "LABEL_OPTIONAL",
          "type": "TYPE_UINT64",
          "options": {
            "[validate.rules]": {
              "uint64": {
                "lte": "10",
                "gte": "1"
              }
            }
          },
          "jsonName": "rangeETest"
        },
        {
          "name": "range_test",
          "number": 3,
          "label": "LABEL_OPTIONAL",
          "type": "TYPE_UINT64",
          "options": {
            "[validate.rules]": {
              "uint64": {
                "lt": "10",
                "gt": "1"
              }
            }
          },
          "jsonName": "rangeTest"
        },
        {
          "name": "in_test",
          "number": 4,
          "label": "LABEL_OPTIONAL",
          "type": "TYPE_UINT64",
          "options": {
            "[validate.rules]": {
              "uint64": {
                "in": [
                  "1",
                  "2",
                  "3"
                ]
              }
            }
          },
          "jsonName": "inTest"
        },
        {
          "name": "not_in_test",
          "number": 5,
          "label": "LABEL_OPTIONAL",
          "type": "TYPE_UINT64",
          "options": {
            "[validate.rules]": {
              "uint64": {
                "notIn": [
                  "1",
                  "2",
                  "3"
                ]
              }
            }
          },
          "jsonName": "notInTest"
        },
        {
          "name": "ignore_test",
          "number": 6,
          "label": "LABEL_OPTIONAL",
          "type": "TYPE_UINT64",
          "options": {
            "[validate.rules]": {
              "uint64": {
                "ignoreEmpty": true
              }
            }
          },
          "jsonName": "ignoreTest"
        }
      ]
    },
    {
      "name": "Sint64Test",
      "field": [
        {
          "name": "const_test",
          "number": 1,
          "label": "LABEL_OPTIONAL",
          "type": "TYPE_SINT64",
          "options": {
            "[validate.rules]": {
              "sint64": {
                "const": "1"
              }
            }
          },
          "jsonName": "constTest"
        },
        {
          "name": "range_e_test",
          "number": 2,
          "label": "LABEL_OPTIONAL",
          "type": "TYPE_SINT64",
          "options": {
            "[validate.rules]": {
              "sint64": {
                "lte": "10",
                "gte": "1"
              }
            }
          },
          "jsonName": "rangeETest"
        },
        {
          "name": "range_test",
          "number": 3,
          "label": "LABEL_OPTIONAL",
          "type": "TYPE_SINT64",
          "options": {
            "[validate.rules]": {
              "sint64": {
                "lt": "10",
                "gt": "1"
              }
            }
          },
          "jsonName": "rangeTest"
        },
        {
          "name": "in_test",
          "number": 4,
          "label": "LABEL_OPTIONAL",
          "type": "TYPE_SINT64",
          "options": {
            "[validate.rules]": {
              "sint64": {
                "in": [
                  "1",
                  "2",
                  "3"
                ]
              }
            }
          },
          "jsonName": "inTest"
        },
        {
          "name": "not_in_test",
          "number": 5,
          "label": "LABEL_OPTIONAL",
          "type": "TYPE_SINT64",
          "options": {
            "[validate.rules]": {
              "sint64": {
                "notIn": [
                  "1",
                  "2",
                  "3"
                ]
              }
            }
          },
          "jsonName": "notInTest"
        },
        {
          "name": "ignore_test",
          "number": 6,
          "label": "LABEL_OPTIONAL",
          "type": "TYPE_SINT64",
          "options": {
            "[validate.rules]": {
              "sint64": {
                "ignoreEmpty": true
              }
            }
          },
          "jsonName": "ignoreTest"
        }
      ]
    },
    {
      "name": "Fixed32Test",
      "field": [
        {
          "name": "const_test",
          "number": 1,
          "label": "LABEL_OPTIONAL",
          "type": "TYPE_FIXED32",
          "options": {
            "[validate.rules]": {
              "fixed32": {
                "const": 1
              }
            }
          },
          "jsonName": "constTest"
        },
        {
          "name": "range_e_test",
          "number": 2,
          "label": "LABEL_OPTIONAL",
          "type": "TYPE_FIXED32",
          "options": {
            "[validate.rules]": {
              "fixed32": {
                "lte": 10,
                "gte": 1
              }
            }
          },
          "jsonName": "rangeETest"
        },
        {
          "name": "range_test",
          "number": 3,
          "label": "LABEL_OPTIONAL",
          "type": "TYPE_FIXED32",
          "options": {
            "[validate.rules]": {
              "fixed32": {
                "lt": 10,
                "gt": 1
              }
            }
          },
          "jsonName": "rangeTest"
        },
        {
          "name": "in_test",
          "number": 4,
          "label": "LABEL_OPTIONAL",
          "type": "TYPE_FIXED32",
          "options": {
            "[validate.rules]": {
              "fixed32": {
                "in": [
                  1,
                  2,
                  3
                ]
              }
            }
          },
          "jsonName": "inTest"
        },
        {
          "name": "not_in_test",
          "number": 5,
          "label": "LABEL_OPTIONAL",
          "type": "TYPE_FIXED32",
          "options": {
            "[validate.rules]": {
              "fixed32": {
                "notIn": [
                  1,
                  2,
                  3
                ]
              }
            }
          },
          "jsonName": "notInTest"
        },
        {
          "name": "ignore_test",
          "number": 6,
          "label": "LABEL_OPTIONAL",
          "type": "TYPE_FIXED32",
          "options": {
            "[validate.rules]": {
              "fixed32": {
                "ignoreEmpty": true
              }
            }
          },
          "jsonName": "ignoreTest"
        }
      ]
    },
    {
      "name": "Fixed64Test",
      "field": [
        {
          "name": "const_test",
          "number": 1,
          "label": "LABEL_OPTIONAL",
          "type": "TYPE_FIXED64",
          "options": {
            "[validate.rules]": {
              "fixed64": {
                "const": "1"
              }
            }
          },
          "jsonName": "constTest"
        },
        {
          "name": "range_e_test",
          "number": 2,
          "label": "LABEL_OPTIONAL",
          "type": "TYPE_FIXED64",
          "options": {
            "[validate.rules]": {
              "fixed64": {
                "lte": "10",
                "gte": "1"
              }
            }
          },
          "jsonName": "rangeETest"
        },
        {
          "name": "range_test",
          "number": 3,
          "label": "LABEL_OPTIONAL",
          "type": "TYPE_FIXED64",
          "options": {
            "[validate.rules]": {
              "fixed64": {
                "lt": "10",
                "gt": "1"
              }
            }
          },
          "jsonName": "rangeTest"
        },
        {
          "name": "in_test",
          "number": 4,
          "label": "LABEL_OPTIONAL",
          "type": "TYPE_FIXED64",
          "options": {
            "[validate.rules]": {
              "fixed64": {
                "in": [
                  "1",
                  "2",
                  "3"
                ]
              }
            }
          },
          "jsonName": "inTest"
        },
        {
          "name": "not_in_test",
          "number": 5,
          "label": "LABEL_OPTIONAL",
          "type": "TYPE_FIXED64",
          "options": {
            "[validate.rules]": {
              "fixed64": {
                "notIn": [
                  "1",
                  "2",
                  "3"
                ]
              }
            }
          },
          "jsonName": "notInTest"
        },
        {
          "name": "ignore_test",
          "number": 6,
          "label": "LABEL_OPTIONAL",
          "type": "TYPE_FIXED64",
          "options": {
            "[validate.rules]": {
              "fixed64": {
                "ignoreEmpty": true
              }
            }
          },
          "jsonName": "ignoreTest"
        }
      ]
    },
    {
      "name": "Sfixed32Test",
      "field": [
        {
          "name": "const_test",
          "number": 1,
          "label": "LABEL_OPTIONAL",
          "type": "TYPE_SFIXED32",
          "options": {
            "[validate.rules]": {
              "sfixed32": {
                "const": 1
              }
            }
          },
          "jsonName": "constTest"
        },
        {
          "name": "range_e_test",
          "number": 2,
          "label": "LABEL_OPTIONAL",
          "type": "TYPE_SFIXED32",
          "options": {
            "[validate.rules]": {
              "sfixed32": {
                "lte": 10,
                "gte": 1
              }
            }
          },
          "jsonName": "rangeETest"
        },
        {
          "name": "range_test",
          "number": 3,
          "label": "LABEL_OPTIONAL",
          "type": "TYPE_SFIXED32",
          "options": {
            "[validate.rules]": {
              "sfixed32": {
                "lt": 10,
                "gt": 1
              }
            }
          },
          "jsonName": "rangeTest"
        },
        {
          "name": "in_test",
          "number": 4,
          "label": "LABEL_OPTIONAL",
          "type": "TYPE_SFIXED32",
          "options": {
            "[validate.rules]": {
              "sfixed32": {
                "in": [
                  1,
                  2,
                  3
                ]
              }
            }
          },
          "jsonName": "inTest"
        },
        {
          "name": "not_in_test",
          "number": 5,
          "label": "LABEL_OPTIONAL",
          "type": "TYPE_SFIXED32",
          "options": {
            "[validate.rules]": {
              "sfixed32": {
                "notIn": [
                  1,
                  2,
                  3
                ]
              }
            }
          },
          "jsonName": "notInTest"
        },
        {
          "name": "ignore_test",
          "number": 6,
          "label": "LABEL_OPTIONAL",
          "type": "TYPE_SFIXED32",
          "options": {
            "[validate.rules]": {
              "sfixed32": {
                "ignoreEmpty": true
              }
            }
          },
          "jsonName": "ignoreTest"
        }
      ]
    },
    {
      "name": "Sfixed64Test",
      "field": [
        {
          "name": "const_test",
          "number": 1,
          "label": "LABEL_OPTIONAL",
          "type": "TYPE_SFIXED64",
          "options": {
            "[validate.rules]": {
              "sfixed64": {
                "const": "1"
              }
            }
          },
          "jsonName": "constTest"
        },
        {
          "name": "range_e_test",
          "number": 2,
          "label": "LABEL_OPTIONAL",
          "type": "TYPE_SFIXED64",
          "options": {
            "[validate.rules]": {
              "sfixed64": {
                "lte": "10",
                "gte": "1"
              }
            }
          },
          "jsonName": "rangeETest"
        },
        {
          "name": "range_test",
          "number": 3,
          "label": "LABEL_OPTIONAL",
          "type": "TYPE_SFIXED64",
          "options": {
            "[validate.rules]": {
              "sfixed64": {
                "lt": "10",
                "gt": "1"
              }
            }
          },
          "jsonName": "rangeTest"
        },
        {
          "name": "in_test",
          "number": 4,
          "label": "LABEL_OPTIONAL",
          "type": "TYPE_SFIXED64",
          "options": {
            "[validate.rules]": {
              "sfixed64": {
                "in": [
                  "1",
                  "2",
                  "3"
                ]
              }
            }
          },
          "jsonName": "inTest"
        },
        {
          "name": "not_in_test",
          "number": 5,
          "label": "LABEL_OPTIONAL",
          "type": "TYPE_SFIXED64",
          "options": {
            "[validate.rules]": {
              "sfixed64": {
                "notIn": [
                  "1",
                  "2",
                  "3"
                ]
              }
            }
          },
          "jsonName": "notInTest"
        },
        {
          "name": "ignore_test",
          "number": 6,
          "label": "LABEL_OPTIONAL",
          "type": "TYPE_SFIXED64",
          "options": {
            "[validate.rules]": {
              "sfixed64": {
                "ignoreEmpty": true
              }
            }
          },
          "jsonName": "ignoreTest"
        }
      ]
    },
    {
      "name": "BoolTest",
      "field": [
        {
          "name": "bool_1_test",
          "number": 1,
          "label": "LABEL_OPTIONAL",
          "type": "TYPE_BOOL",
          "options": {
            "[validate.rules]": {
              "bool": {
                "const": true
              }
            }
          },
          "jsonName": "bool1Test"
        },
        {
          "name": "bool_2_test",
          "number": 2,
          "label": "LABEL_OPTIONAL",
          "type": "TYPE_BOOL",
          "options": {
            "[validate.rules]": {
              "bool": {
                "const": false
              }
            }
          },
          "jsonName": "bool2Test"
        }
      ]
    },
    {
      "name": "StringTest",
      "field": [
        {
          "name": "const_test",
          "number": 1,
          "label": "LABEL_OPTIONAL",
          "type": "TYPE_STRING",
          "options": {
            "[validate.rules]": {
              "string": {
                "const": "aaa"
              }
            }
          },
          "jsonName": "constTest"
        },
        {
          "name": "len_test",
          "number": 2,
          "label": "LABEL_OPTIONAL",
          "type": "TYPE_STRING",
          "options": {
            "[validate.rules]": {
              "string": {
                "len": "3"
              }
            }
          },
          "jsonName": "lenTest"
        },
        {
          "name": "s_range_len_test",
          "number": 3,
          "label": "LABEL_OPTIONAL",
          "type": "TYPE_STRING",
          "options": {
            "[validate.rules]": {
              "string": {
                "minLen": "1",
                "maxLen": "3"
              }
            }
          },
          "jsonName": "sRangeLenTest"
        },
        {
          "name": "b_range_len_test",
          "number": 4,
          "label": "LABEL_OPTIONAL",
          "type": "TYPE_STRING",
          "options": {
            "[validate.rules]": {
              "string": {
                "minBytes": "1",
                "maxBytes": "3"
              }
            }
          },
          "jsonName": "bRangeLenTest"
        },
        {
          "name": "pattern_test",
          "number": 5,
          "label": "LABEL_OPTIONAL",
          "type": "TYPE_STRING",
          "options": {
            "[validate.rules]": {
              "string": {
                "pattern": "^test"
              }
            }
          },
          "jsonName": "patternTest"
        },
        {
          "name": "prefix_test",
          "number": 6,
          "label": "LABEL_OPTIONAL",
          "type": "TYPE_STRING",
          "options": {
            "[validate.rules]": {
              "string": {
                "prefix": "prefix"
              }
            }
          },
          "jsonName": "prefixTest"
        },
        {
          "name": "suffix_test",
          "number": 7,
          "label": "LABEL_OPTIONAL",
          "type": "TYPE_STRING",
          "options": {
            "[validate.rules]": {
              "string": {
                "suffix": "suffix"
              }
            }
          },
          "jsonName": "suffixTest"
        },
        {
          "name": "contains_test",
          "number": 8,
          "label": "LABEL_OPTIONAL",
          "type": "TYPE_STRING",
          "options": {
            "[validate.rules]": {
              "string": {
                "contains": "contains"
              }
            }
          },
          "jsonName": "containsTest"
        },
        {
          "name": "not_contains_test",
          "number": 9,
          "label": "LABEL_OPTIONAL",
          "type": "TYPE_STRING",
          "options": {
            "[validate.rules]": {
              "string": {
                "notContains": "not_contains"
              }
            }
          },
          "jsonName": "notContainsTest"
        },
        {
          "name": "in_test",
          "number": 10,
          "label": "LABEL_OPTIONAL",
          "type": "TYPE_STRING",
          "options": {
            "[validate.rules]": {
              "string": {
                "in": [
                  "a",
                  "b",
                  "c"
                ]
              }
            }
          },
          "jsonName": "inTest"
        },
        {
          "name": "not_in_test",
          "number": 11,
          "label": "LABEL_OPTIONAL",
          "type": "TYPE_STRING",
          "options": {
            "[validate.rules]": {
              "string": {
                "notIn": [
                  "a",
                  "b",
                  "c"
                ]
              }
            }
          },
          "jsonName": "notInTest"
        },
        {
          "name": "email_test",
          "number": 12,
          "label": "LABEL_OPTIONAL",
          "type": "TYPE_STRING",
          "options": {
            "[validate.rules]": {
              "string": {
                "email": true
              }
            }
          },
          "jsonName": "emailTest"
        },
        {
          "name": "hostname_test",
          "number": 13,
          "label": "LABEL_OPTIONAL",
          "type": "TYPE_STRING",
          "options": {
            "[validate.rules]": {
              "string": {
                "hostname": true
              }
            }
          },
          "jsonName": "hostnameTest"
        },
        {
          "name": "ip_test",
          "number": 14,
          "label": "LABEL_OPTIONAL",
          "type": "TYPE_STRING",
          "options": {
            "[validate.rules]": {
              "string": {
                "ip": true
              }
            }
          },
          "jsonName": "ipTest"
        },
        {
          "name": "ipv4_test",
          "number": 15,
          "label": "LABEL_OPTIONAL",
          "type": "TYPE_STRING",
          "options": {
            "[validate.rules]": {
              "string": {
                "ipv4": true
              }
            }
          },
          "jsonName": "ipv4Test"
        },
        {
          "name": "ipv6_test",
          "number": 16,
          "label": "LABEL_OPTIONAL",
          "type": "TYPE_STRING",
          "options": {
            "[validate.rules]": {
              "string": {
                "ipv6": true
              }
            }
          },
          "jsonName": "ipv6Test"
        },
        {
          "name": "uri_test",
          "number": 17,
          "label": "LABEL_OPTIONAL",
          "type": "TYPE_STRING",
          "options": {
            "[validate.rules]": {
              "string": {
                "uri": true
              }
            }
          },
          "jsonName": "uriTest"
        },
        {
          "name": "uri_ref_test",
          "number": 18,
          "label": "LABEL_OPTIONAL",
          "type": "TYPE_STRING",
          "options": {
            "[validate.rules]": {
              "string": {
                "uriRef": true
              }
            }
          },
          "jsonName": "uriRefTest"
        },
        {
          "name": "address_test",
          "number": 19,
          "label": "LABEL_OPTIONAL",
          "type": "TYPE_STRING",
          "options": {
            "[validate.rules]": {
              "string": {
                "address": true
              }
            }
          },
          "jsonName": "addressTest"
        },
        {
          "name": "uuid_test",
          "number": 20,
          "label": "LABEL_OPTIONAL",
          "type": "TYPE_STRING",
          "options": {
            "[validate.rules]": {
              "string": {
                "uuid": true
              }
            }
          },
          "jsonName": "uuidTest"
        },
        {
          "name": "ignore_test",
          "number": 21,
          "label": "LABEL_OPTIONAL",
          "type": "TYPE_STRING",
          "options": {
            "[validate.rules]": {
              "string": {
                "ignoreEmpty": true
              }
            }
          },
          "jsonName": "ignoreTest"
        }
      ]
    },
    {
      "name": "BytesTest",
      "field": [
        {
          "name": "const_test",
          "number": 1,
          "label": "LABEL_OPTIONAL",
          "type": "TYPE_BYTES",
          "options": {
            "[validate.rules]": {
              "bytes": {
                "const": "ZGVtbw=="
              }
            }
          },
          "jsonName": "constTest"
        },
        {
          "name": "len_test",
          "number": 2,
          "label": "LABEL_OPTIONAL",
          "type": "TYPE_BYTES",
          "options": {
            "[validate.rules]": {
              "bytes": {
                "len": "4"
              }
            }
          },
          "jsonName": "lenTest"
        },
        {
          "name": "range_len_test",
          "number": 3,
          "label": "LABEL_OPTIONAL",
          "type": "TYPE_BYTES",
          "options": {
            "[validate.rules]": {
              "bytes": {
                "minLen": "1",
                "maxLen": "4"
              }
            }
          },
          "jsonName": "rangeLenTest"
        },
        {
          "name": "pattern_test",
          "number": 4,
          "label": "LABEL_OPTIONAL",
          "type": "TYPE_BYTES",
          "options": {
            "[validate.rules]": {
              "bytes": {
                "pattern": "^test"
              }
            }
          },
          "jsonName": "patternTest"
        },
        {
          "name": "prefix_test",
          "number": 5,
          "label": "LABEL_OPTIONAL",
          "type": "TYPE_BYTES",
          "options": {
            "[validate.rules]": {
              "bytes": {
                "prefix": "cHJlZml4"
              }
            }
          },
          "jsonName": "prefixTest"
        },
        {
          "name": "suffix_test",
          "number": 6,
          "label": "LABEL_OPTIONAL",
          "type": "TYPE_BYTES",
          "options": {
            "[validate.rules]": {
              "bytes": {
                "suffix": "c3VmZml4"
              }
            }
          },
          "jsonName": "suffixTest"
        },
        {
          "name": "contains_test",
          "number": 7,
          "label": "LABEL_OPTIONAL",
          "type": "TYPE_BYTES",
          "options": {
            "[validate.rules]": {
              "bytes": {
                "contains": "Y29udGFpbnM="
              }
            }
          },
          "jsonName": "containsTest"
        },
        {
          "name": "in_test",
          "number": 8,
          "label": "LABEL_OPTIONAL",
          "type": "TYPE_BYTES",
          "options": {
            "[validate.rules]": {
              "bytes": {
                "in": [
                  "YQ==",
                  "Yg==",
                  "Yw=="
                ]
              }
            }
          },
          "jsonName": "inTest"
        },
        {
          "name": "not_in_test",
          "number": 9,
          "label": "LABEL_OPTIONAL",
          "type": "TYPE_BYTES",
          "options": {
            "[validate.rules]": {
              "bytes": {
                "notIn": [
                  "YQ==",
                  "Yg==",
                  "Yw=="
                ]
              }
            }
          },
          "jsonName": "notInTest"
        }
      ]
    },
    {
      "name": "EnumTest",
      "field": [
        {
          "name": "const_test",
          "number": 1,
          "label": "LABEL_OPTIONAL",
          "type": "TYPE_ENUM",
          "typeName": ".validate_test.State",
          "options": {
            "[validate.rules]": {
              "enum": {
                "const": 2
              }
            }
          },
          "jsonName": "constTest"
        },
        {
          "name": "defined_only_test",
          "number": 2,
          "label": "LABEL_OPTIONAL",
          "type": "TYPE_ENUM",
          "typeName": ".validate_test.State",
          "options": {
            "[validate.rules]": {
              "enum": {
                "definedOnly": true
              }
            }
          },
          "jsonName": "definedOnlyTest"
        },
        {
          "name": "in_test",
          "number": 3,
          "label": "LABEL_OPTIONAL",
          "type": "TYPE_ENUM",
          "typeName": ".validate_test.State",
          "options": {
            "[validate.rules]": {
              "enum": {
                "in": [
                  0,
                  2
                ]
              }
            }
          },
          "jsonName": "inTest"
        },
        {
          "name": "not_in_test",
          "number": 4,
          "label": "LABEL_OPTIONAL",
          "type": "TYPE_ENUM",
          "typeName": ".validate_test.State",
          "options": {
            "[validate.rules]": {
              "enum": {
                "notIn": [
                  0,
                  2
                ]
              }
            }
          },
          "jsonName": "notInTest"
        }
      ]
    },
    {
      "name": "MapTest",
      "field": [
        {
          "name": "pair_test",
          "number": 1,
          "label": "LABEL_REPEATED",
          "type": "TYPE_MESSAGE",
          "typeName": ".validate_test.MapTest.PairTestEntry",
          "options": {
            "[validate.rules]": {
              "map": {
                "minPairs": "1",
                "maxPairs": "5"
              }
            }
          },
          "jsonName": "pairTest"
        },
        {
          "name": "no_parse_test",
          "number": 2,
          "label": "LABEL_REPEATED",
          "type": "TYPE_MESSAGE",
          "typeName": ".validate_test.MapTest.NoParseTestEntry",
          "options": {
            "[validate.rules]": {
              "map": {
                "noSparse": true
              }
            }
          },
          "jsonName": "noParseTest"
        },
        {
          "name": "keys_test",
          "number": 3,
          "label": "LABEL_REPEATED",
          "type": "TYPE_MESSAGE",
          "typeName": ".validate_test.MapTest.KeysTestEntry",
          "options": {
            "[validate.rules]": {
              "map": {
                "keys": {
                  "string": {
                    "minLen": "1",
                    "maxLen": "5"
                  }
                }
              }
            }
          },
          "jsonName": "keysTest"
        },
        {
          "name": "values_test",
          "number": 4,
          "label": "LABEL_REPEATED",
          "type": "TYPE_MESSAGE",
          "typeName": ".validate_test.MapTest.ValuesTestEntry",
          "options": {
            "[validate.rules]": {
              "map": {
                "values": {
                  "int32": {
                    "lte": 5,
                    "gte": 5
                  }
                }
              }
            }
          },
          "jsonName": "valuesTest"
        },
        {
          "name": "keys_values_test",
          "number": 5,
          "label": "LABEL_REPEATED",
          "type": "TYPE_MESSAGE",
          "typeName": ".validate_test.MapTest.KeysValuesTestEntry",
          "options": {
            "[validate.rules]": {
              "map": {
                "keys": {
                  "string": {
                    "minLen": "1",
                    "maxLen": "5"
                  }
                },
                "values": {
                  "timestamp": {
                    "gtNow": true
                  }
                }
              }
            }
          },
          "jsonName": "keysValuesTest"
        },
        {
          "name": "ignore_test",
          "number": 6,
          "label": "LABEL_REPEATED",
          "type": "TYPE_MESSAGE",
          "typeName": ".validate_test.MapTest.IgnoreTestEntry",
          "options": {
            "[validate.rules]": {
              "map": {
                "ignoreEmpty": true
              }
            }
          },
          "jsonName": "ignoreTest"
        }
      ],
      "nestedType": [
        {
          "name": "PairTestEntry",
          "field": [
            {
              "name": "key",
              "number": 1,
              "label": "LABEL_OPTIONAL",
              "type": "TYPE_STRING",
              "jsonName": "key"
            },
            {
              "name": "value",
              "number": 2,
              "label": "LABEL_OPTIONAL",
              "type": "TYPE_INT32",
              "jsonName": "value"
            }
          ],
          "options": {
            "mapEntry": true
          }
        },
        {
          "name": "NoParseTestEntry",
          "field": [
            {
              "name": "key",
              "number": 1,
              "label": "LABEL_OPTIONAL",
              "type": "TYPE_STRING",
              "jsonName": "key"
            },
            {
              "name": "value",
              "number": 2,
              "label": "LABEL_OPTIONAL",
              "type": "TYPE_INT32",
              "jsonName": "value"
            }
          ],
          "options": {
            "mapEntry": true
          }
        },
        {
          "name": "KeysTestEntry",
          "field": [
            {
              "name": "key",
              "number": 1,
              "label": "LABEL_OPTIONAL",
              "type": "TYPE_STRING",
              "jsonName": "key"
            },
            {
              "name": "value",
              "number": 2,
              "label": "LABEL_OPTIONAL",
              "type": "TYPE_INT32",
              "jsonName": "value"
            }
          ],
          "options": {
            "mapEntry": true
          }
        },
        {
          "name": "ValuesTestEntry",
          "field": [
            {
              "name": "key",
              "number": 1,
              "label": "LABEL_OPTIONAL",
              "type": "TYPE_STRING",
              "jsonName": "key"
            },
            {
              "name": "value",
              "number": 2,
              "label": "LABEL_OPTIONAL",
              "type": "TYPE_INT32",
              "jsonName": "value"
            }
          ],
          "options": {
            "mapEntry": true
          }
        },
        {
          "name": "KeysValuesTestEntry",
          "field": [
            {
              "name": "key",
              "number": 1,
              "label": "LABEL_OPTIONAL",
              "type": "TYPE_STRING",
              "jsonName": "key"
            },
            {
              "name": "value",
              "number": 2,
              "label": "LABEL_OPTIONAL",
              "type": "TYPE_MESSAGE",
              "typeName": ".google.protobuf.Timestamp",
              "jsonName": "value"
            }
          ],
          "options": {
            "mapEntry": true
          }
        },
        {
          "name": "IgnoreTestEntry",
          "field": [
            {
              "name": "key",
              "number": 1,
              "label": "LABEL_OPTIONAL",
              "type": "TYPE_STRING",
              "jsonName": "key"
            },
            {
              "name": "value",
              "number": 2,
              "label": "LABEL_OPTIONAL",
              "type": "TYPE_INT32",
              "jsonName": "value"
            }
          ],
          "options": {
            "mapEntry": true
          }
        }
      ]
    },
    {
      "name": "MessageTest",
      "field": [
        {
          "name": "skip_test",
          "number": 1,
          "label": "LABEL_OPTIONAL",
          "type": "TYPE_STRING",
          "options": {
            "[validate.rules]": {
              "message": {
                "skip": true
              }
            }
          },
          "jsonName": "skipTest"
        },
        {
          "name": "required_test",
          "number": 2,
          "label": "LABEL_OPTIONAL",
          "type": "TYPE_STRING",
          "options": {
            "[validate.rules]": {
              "message": {
                "required": true
              }
            }
          },
          "jsonName": "requiredTest"
        }
      ]
    },
    {
      "name": "RepeatedTest",
      "field": [
        {
          "name": "range_test",
          "number": 1,
          "label": "LABEL_REPEATED",
          "type": "TYPE_STRING",
          "options": {
            "[validate.rules]": {
              "repeated": {
                "minItems": "1",
                "maxItems": "5"
              }
            }
          },
          "jsonName": "rangeTest"
        },
        {
          "name": "unique_test",
          "number": 2,
          "label": "LABEL_REPEATED",
          "type": "TYPE_STRING",
          "options": {
            "[validate.rules]": {
              "repeated": {
                "unique": true
              }
            }
          },
          "jsonName": "uniqueTest"
        },
        {
          "name": "items_string_test",
          "number": 3,
          "label": "LABEL_REPEATED",
          "type": "TYPE_STRING",
          "options": {
            "[validate.rules]": {
              "repeated": {
                "minItems": "1",
                "maxItems": "5",
                "items": {
                  "string": {
                    "minLen": "1",
                    "maxLen": "5"
                  }
                }
              }
            }
          },
          "jsonName": "itemsStringTest"
        },
        {
          "name": "items_double_test",
          "number": 4,
          "label": "LABEL_REPEATED",
          "type": "TYPE_DOUBLE",
          "options": {
            "[validate.rules]": {
              "repeated": {
                "minItems": "1",
                "maxItems": "5",
                "items": {
                  "double": {
                    "lt": 5.0,
                    "gt": 1.0
                  }
                }
              }
            }
          },
          "jsonName": "itemsDoubleTest"
        },
        {
          "name": "items_int32_test",
          "number": 5,
          "label": "LABEL_REPEATED",
          "type": "TYPE_INT32",
          "options": {
            "[validate.rules]": {
              "repeated": {
                "minItems": "1",
                "maxItems": "5",
                "items": {
                  "int32": {
                    "lt": 5,
                    "gt": 1
                  }
                }
              }
            }
          },
          "jsonName": "itemsInt32Test"
        },
        {
          "name": "items_timestamp_test",
          "number": 6,
          "label": "LABEL_REPEATED",
          "type": "TYPE_MESSAGE",
          "typeName": ".google.protobuf.Timestamp",
          "options": {
            "[validate.rules]": {
              "repeated": {
                "minItems": "1",
                "maxItems": "5",
                "items": {
                  "timestamp": {
                    "lt": "2020-09-13T12:26:50Z",
                    "gt": "2020-09-13T12:26:40Z"
                  }
                }
              }
            }
          },
          "jsonName": "itemsTimestampTest"
        },
        {
          "name": "items_duration_test",
          "number": 7,
          "label": "LABEL_REPEATED",
          "type": "TYPE_MESSAGE",
          "typeName": ".google.protobuf.Duration",
          "options": {
            "[validate.rules]": {
              "repeated": {
                "minItems": "1",
                "maxItems": "5",
                "items": {
                  "duration": {
                    "lt": "20s",
                    "gt": "10s"
                  }
                }
              }
            }
          },
          "jsonName": "itemsDurationTest"
        },
        {
          "name": "items_bytes_test",
          "number": 8,
          "label": "LABEL_REPEATED",
          "type": "TYPE_BYTES",
          "options": {
            "[validate.rules]": {
              "repeated": {
                "minItems": "1",
                "maxItems": "5",
                "items": {
                  "bytes": {
                    "minLen": "1",
                    "maxLen": "5"
                  }
                }
              }
            }
          },
          "jsonName": "itemsBytesTest"
        },
        {
          "name": "ignore_test",
          "number": 9,
          "label": "LABEL_REPEATED",
          "type": "TYPE_STRING",
          "options": {
            "[validate.rules]": {
              "repeated": {
                "ignoreEmpty": true
              }
            }
          },
          "jsonName": "ignoreTest"
        }
      ]
    },
    {
      "name": "AnyTest",
      "field": [
        {
          "name": "required_test",
          "number": 1,
          "label": "LABEL_OPTIONAL",
          "type": "TYPE_MESSAGE",
          "typeName": ".google.protobuf.Any",
          "options": {
            "[validate.rules]": {
              "any": {
                "required": true
              }
            }
          },
          "jsonName": "requiredTest"
        },
        {
          "name": "not_in_test",
          "number": 2,
          "label": "LABEL_OPTIONAL",
          "type": "TYPE_MESSAGE",
          "typeName": ".google.protobuf.Any",
          "options": {
            "[validate.rules]": {
              "any": {
                "notIn": [
                  "type.googleapis.com/google.protobuf.Duration",
                  "type.googleapis.com/google.protobuf.Timestamp"
                ]
              }
            }
          },
          "jsonName": "notInTest"
        },
        {
          "name": "in_test",
          "number": 3,
          "label": "LABEL_OPTIONAL",
          "type": "TYPE_MESSAGE",
          "typeName": ".google.protobuf.Any",
          "options": {
            "[validate.rules]": {
              "any": {
                "in": [
                  "type.googleapis.com/google.protobuf.Duration",
                  "type.googleapis.com/google.protobuf.Timestamp"
                ]
              }
            }
          },
          "jsonName": "inTest"
        }
      ]
    },
    {
      "name": "DurationTest",
      "field": [
        {
          "name": "required_test",
          "number": 1,
          "label": "LABEL_OPTIONAL",
          "type": "TYPE_MESSAGE",
          "typeName": ".google.protobuf.Duration",
          "options": {
            "[validate.rules]": {
              "duration": {
                "required": true
              }
            }
          },
          "jsonName": "requiredTest"
        },
        {
          "name": "const_test",
          "number": 2,
          "label": "LABEL_OPTIONAL",
          "type": "TYPE_MESSAGE",
          "typeName": ".google.protobuf.Duration",
          "options": {
            "[validate.rules]": {
              "duration": {
                "const": "1.500s"
              }
            }
          },
          "jsonName": "constTest"
        },
        {
          "name": "range_test",
          "number": 3,
          "label": "LABEL_OPTIONAL",
          "type": "TYPE_MESSAGE",
          "typeName": ".google.protobuf.Duration",
          "options": {
            "[validate.rules]": {
              "duration": {
                "lt": "10.500s",
                "gt": "5.500s"
              }
            }
          },
          "jsonName": "rangeTest"
        },
        {
          "name": "range_e_test",
          "number": 4,
          "label": "LABEL_OPTIONAL",
          "type": "TYPE_MESSAGE",
          "typeName": ".google.protobuf.Duration",
          "options": {
            "[validate.rules]": {
              "duration": {
                "lte": "10.500s",
                "gte": "5.500s"
              }
            }
          },
          "jsonName": "rangeETest"
        },
        {
          "name": "in_test",
          "number": 5,
          "label": "LABEL_OPTIONAL",
          "type": "TYPE_MESSAGE",
          "typeName": ".google.protobuf.Duration",
          "options": {
            "[validate.rules]": {
              "duration": {
                "in": [
                  "1.500s",
                  "3.500s"
                ]
              }
            }
          },
          "jsonName": "inTest"
        },
        {
          "name": "not_in_test",
          "number": 6,
          "label": "LABEL_OPTIONAL",
          "type": "TYPE_MESSAGE",
          "typeName": ".google.protobuf.Duration",
          "options": {
            "[validate.rules]": {
              "duration": {
                "notIn": [
                  "1.500s",
                  "3.500s"
                ]
              }
            }
          },
          "jsonName": "notInTest"
        }
      ]
    },
    {
      "name": "TimestampTest",
      "field": [
        {
          "name": "required_test",
          "number": 1,
          "label": "LABEL_OPTIONAL",
          "type": "TYPE_MESSAGE",
          "typeName": ".google.protobuf.Timestamp",
          "options": {
            "[validate.rules]": {
              "timestamp": {
                "required": true
              }
            }
          },
          "jsonName": "requiredTest"
        },
        {
          "name": "const_test",
          "number": 2,
          "label": "LABEL_OPTIONAL",
          "type": "TYPE_MESSAGE",
          "typeName": ".google.protobuf.Timestamp",
          "options": {
            "[validate.rules]": {
              "timestamp": {
                "const": "2020-09-13T12:26:40Z"
              }
            }
          },
          "jsonName": "constTest"
        },
        {
          "name": "range_test",
          "number": 3,
          "label": "LABEL_OPTIONAL",
          "type": "TYPE_MESSAGE",
          "typeName": ".google.protobuf.Timestamp",
          "options": {
            "[validate.rules]": {
              "timestamp": {
                "lt": "2020-09-13T12:26:50Z",
                "gt": "2020-09-13T12:26:40Z"
              }
            }
          },
          "jsonName": "rangeTest"
        },
        {
          "name": "range_e_test",
          "number": 4,
          "label": "LABEL_OPTIONAL",
          "type": "TYPE_MESSAGE",
          "typeName": ".google.protobuf.Timestamp",
          "options": {
            "[validate.rules]": {
              "timestamp": {
                "lte": "2020-09-13T12:26:50Z",
                "gte": "2020-09-13T12:26:40Z"
              }
            }
          },
          "jsonName": "rangeETest"
        },
        {
          "name": "lt_now_test",
          "number": 5,
          "label": "LABEL_OPTIONAL",
          "type": "TYPE_MESSAGE",
          "typeName": ".google.protobuf.Timestamp",
          "options": {
            "[validate.rules]": {
              "timestamp": {
                "ltNow": true
              }
            }
          },
          "jsonName": "ltNowTest"
        },
        {
          "name": "gt_now_test",
          "number": 6,
          "label": "LABEL_OPTIONAL",
          "type": "TYPE_MESSAGE",
          "typeName": ".google.protobuf.Timestamp",
          "options": {
            "[validate.rules]": {
              "timestamp": {
                "gtNow": true
              }
            }
          },
          "jsonName": "gtNowTest"
        },
        {
          "name": "within_test",
          "number": 7,
          "label": "LABEL_OPTIONAL",
          "type": "TYPE_MESSAGE",
          "typeName": ".google.protobuf.Timestamp",
          "options": {
            "[validate.rules]": {
              "timestamp": {
                "within": "1s"
              }
            }
          },
          "jsonName": "withinTest"
        },
        {
          "name": "within_and_gt_now_test",
          "number": 8,
          "label": "LABEL_OPTIONAL",
          "type": "TYPE_MESSAGE",
          "typeName": ".google.protobuf.Timestamp",
          "options": {
            "[validate.rules]": {
              "timestamp": {
                "gtNow": true,
                "within": "3600s"
              }
            }
          },
          "jsonName": "withinAndGtNowTest"
        }
      ]
    },
    {
      "name": "MessageDisabledTest",
      "field": [
        {
          "name": "const_test",
          "number": 1,
          "label": "LABEL_OPTIONAL",
          "type": "TYPE_SINT32",
          "options": {
            "[validate.rules]": {
              "float": {
                "const": 1.0
              }
            }
          },
          "jsonName": "constTest"
        },
        {
          "name": "range_e_test",
          "number": 2,
          "label": "LABEL_OPTIONAL",
          "type": "TYPE_SINT32",
          "options": {
            "[validate.rules]": {
              "float": {
                "lte": 10.0,
                "gte": 1.0
              }
            }
          },
          "jsonName": "rangeETest"
        },
        {
          "name": "range_test",
          "number": 3,
          "label": "LABEL_OPTIONAL",
          "type": "TYPE_SINT32",
          "options": {
            "[validate.rules]": {
              "float": {
                "lt": 10.0,
                "gt": 1.0
              }
            }
          },
          "jsonName": "rangeTest"
        }
      ],
      "options": {
        "[validate.disabled]": true
      }
    },
    {
      "name": "MessageIgnoredTest",
      "field": [
        {
          "name": "const_test",
          "number": 1,
          "label": "LABEL_OPTIONAL",
          "type": "TYPE_SINT32",
          "options": {
            "[validate.rules]": {
              "float": {
                "const": 1.0
              }
            }
          },
          "jsonName": "constTest"
        },
        {
          "name": "range_e_test",
          "number": 2,
          "label": "LABEL_OPTIONAL",
          "type": "TYPE_SINT32",
          "options": {
            "[validate.rules]": {
              "float": {
                "lte": 10.0,
                "gte": 1.0
              }
            }
          },
          "jsonName": "rangeETest"
        },
        {
          "name": "range_test",
          "number": 3,
          "label": "LABEL_OPTIONAL",
          "type": "TYPE_SINT32",
          "options": {
            "[validate.rules]": {
              "float": {
                "lt": 10.0,
                "gt": 1.0
              }
            }
          },
          "jsonName": "rangeTest"
        }
      ],
      "options": {
        "[validate.ignored]": true
      }
    },
    {
      "name": "OneOfTest",
      "field": [
        {
          "name": "header",
          "number": 1,
          "label": "LABEL_OPTIONAL",
          "type": "TYPE_STRING",
          "jsonName": "header"
        },
        {
          "name": "x",
          "number": 2,
          "label": "LABEL_OPTIONAL",
          "type": "TYPE_STRING",
          "oneofIndex": 0,
          "jsonName": "x"
        },
        {
          "name": "y",
          "number": 3,
          "label": "LABEL_OPTIONAL",
          "type": "TYPE_INT32",
          "oneofIndex": 0,
          "jsonName": "y"
        }
      ],
      "oneofDecl": [
        {
          "name": "id",
          "options": {
            "[validate.required]": true
          }
        }
      ]
    },
    {
      "name": "OneOfNotTest",
      "field": [
        {
          "name": "header",
          "number": 1,
          "label": "LABEL_OPTIONAL",
          "type": "TYPE_STRING",
          "jsonName": "header"
        },
        {
          "name": "x",
          "number": 2,
          "label": "LABEL_OPTIONAL",
          "type": "TYPE_STRING",
          "oneofIndex": 0,
          "jsonName": "x"
        },
        {
          "name": "y",
          "number": 3,
          "label": "LABEL_OPTIONAL",
          "type": "TYPE_INT32",
          "oneofIndex": 0,
          "jsonName": "y"
        }
      ],
      "oneofDecl": [
        {
          "name": "id"
        }
      ]
    },
    {
      "name": "NestedMessage",
      "field": [
        {
          "name": "string_in_map_test",
          "number": 1,
          "label": "LABEL_REPEATED",
          "type": "TYPE_MESSAGE",
          "typeName": ".validate_test.NestedMessage.StringInMapTestEntry",
          "jsonName": "stringInMapTest"
        },
        {
          "name": "map_in_map_test",
          "number": 2,
          "label": "LABEL_REPEATED",
          "type": "TYPE_MESSAGE",
          "typeName": ".validate_test.NestedMessage.MapInMapTestEntry",
          "jsonName": "mapInMapTest"
        },
        {
          "name": "user_pay",
          "number": 3,
          "label": "LABEL_OPTIONAL",
          "type": "TYPE_MESSAGE",
          "typeName": ".validate_test.NestedMessage.UserPayMessage",
          "jsonName": "userPay"
        },
        {
          "name": "not_enable_user_pay",
          "number": 4,
          "label": "LABEL_OPTIONAL",
          "type": "TYPE_MESSAGE",
          "typeName": ".validate_test.NestedMessage.NotEnableUserPayMessage",
          "options": {
            "[validate.rules]": {
              "message": {
                "skip": true
              }
            }
          },
          "jsonName": "notEnableUserPay"
        },
        {
          "name": "empty",
          "number": 5,
          "label": "LABEL_OPTIONAL",
          "type": "TYPE_MESSAGE",
          "typeName": ".google.protobuf.Empty",
          "jsonName": "empty"
        }
      ],
      "nestedType": [
        {
          "name": "UserPayMessage",
          "field": [
            {
              "name": "bank_number",
              "number": 1,
              "label": "LABEL_OPTIONAL",
              "type": "TYPE_STRING",
              "options": {
                "[validate.rules]": {
                  "string": {
                    "minLen": "13",
                    "maxLen": "19"
                  }
                }
              },
              "jsonName": "bankNumber"
            },
            {
              "name": "exp",
              "number": 2,
              "label": "LABEL_OPTIONAL",
              "type": "TYPE_MESSAGE",
              "typeName": ".google.protobuf.Timestamp",
              "options": {
                "[validate.rules]": {
                  "timestamp": {
                    "gtNow": true
                  }
                }
              },
              "jsonName": "exp"
            },
            {
              "name": "uuid",
              "number": 3,
              "label": "LABEL_OPTIONAL",
              "type": "TYPE_STRING",
              "options": {
                "[validate.rules]": {
                  "string": {
                    "uuid": true
                  }
                }
              },
              "jsonName": "uuid"
            }
          ]
        },
        {
          "name": "NotEnableUserPayMessage",
          "field": [
            {
              "name": "bank_number",
              "number": 1,
              "label": "LABEL_OPTIONAL",
              "type": "TYPE_STRING",
              "options": {
                "[validate.rules]": {
                  "string": {
                    "minLen": "13",
                    "maxLen": "19"
                  }
                }
              },
              "jsonName": "bankNumber"
            },
            {
              "name": "exp",
              "number": 2,
              "label": "LABEL_OPTIONAL",
              "type": "TYPE_MESSAGE",
              "typeName": ".google.protobuf.Timestamp",
              "options": {
                "[validate.rules]": {
                  "timestamp": {
                    "gtNow": true
                  }
                }
              },
              "jsonName": "exp"
            },
            {
              "name": "uuid",
              "number": 3,
              "label": "LABEL_OPTIONAL",
              "type": "TYPE_STRING",
              "options": {
                "[validate.rules]": {
                  "string": {
                    "uuid": true
                  }
                }
              },
              "jsonName": "uuid"
            }
          ]
        },
        {
          "name": "StringInMapTestEntry",
          "field": [
            {
              "name": "key",
              "number": 1,
              "label": "LABEL_OPTIONAL",
              "type": "TYPE_STRING",
              "jsonName": "key"
            },
            {
              "name": "value",
              "number": 2,
              "label": "LABEL_OPTIONAL",
              "type": "TYPE_MESSAGE",
              "typeName": ".validate_test.StringTest",
              "jsonName": "value"
            }
          ],
          "options": {
            "mapEntry": true
          }
        },
        {
          "name": "MapInMapTestEntry",
          "field": [
            {
              "name": "key",
              "number": 1,
              "label": "LABEL_OPTIONAL",
              "type": "TYPE_STRING",
              "jsonName": "key"
            },
            {
              "name": "value",
              "number": 2,
              "label": "LABEL_OPTIONAL",
              "type": "TYPE_MESSAGE",
              "typeName": ".validate_test.MapTest",
              "jsonName": "value"
            }
          ],
          "options": {
            "mapEntry": true
          }
        }
      ]
    }
  ],
  "service": [],
  "public_dependency": [],
  "enum_type": [
    {
      "name": "State",
      "value": [
        {
          "name": "INACTIVE",
          "number": 0
        },
        {
          "name": "PENDING",
          "number": 1
        },
        {
          "name": "ACTIVE",
          "number": 2
        }
      ]
    }
  ],
  "extension": [],
  "options": {}
}
