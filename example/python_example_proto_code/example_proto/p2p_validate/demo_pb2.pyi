"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.message
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class FloatTest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    CONST_TEST_FIELD_NUMBER: builtins.int
    RANGE_E_TEST_FIELD_NUMBER: builtins.int
    RANGE_TEST_FIELD_NUMBER: builtins.int
    IN_TEST_FIELD_NUMBER: builtins.int
    NOT_IN_TEST_FIELD_NUMBER: builtins.int
    DEFAULT_TEST_FIELD_NUMBER: builtins.int
    NOT_ENABLE_TEST_FIELD_NUMBER: builtins.int
    DEFAULT_FACTORY_TEST_FIELD_NUMBER: builtins.int
    MISS_DEFAULT_TEST_FIELD_NUMBER: builtins.int
    ALIAS_TEST_FIELD_NUMBER: builtins.int
    DESC_TEST_FIELD_NUMBER: builtins.int
    MULTIPLE_OF_TEST_FIELD_NUMBER: builtins.int
    EXAMPLE_TEST_FIELD_NUMBER: builtins.int
    EXAMPLE_FACTORY_FIELD_NUMBER: builtins.int
    FIELD_TEST_FIELD_NUMBER: builtins.int
    TYPE_TEST_FIELD_NUMBER: builtins.int
    const_test: builtins.float
    range_e_test: builtins.float
    range_test: builtins.float
    in_test: builtins.float
    not_in_test: builtins.float
    default_test: builtins.float
    not_enable_test: builtins.float
    default_factory_test: builtins.float
    miss_default_test: builtins.float
    alias_test: builtins.float
    desc_test: builtins.float
    multiple_of_test: builtins.float
    example_test: builtins.float
    example_factory: builtins.float
    field_test: builtins.float
    type_test: builtins.float
    def __init__(self,
        *,
        const_test: builtins.float = ...,
        range_e_test: builtins.float = ...,
        range_test: builtins.float = ...,
        in_test: builtins.float = ...,
        not_in_test: builtins.float = ...,
        default_test: builtins.float = ...,
        not_enable_test: builtins.float = ...,
        default_factory_test: builtins.float = ...,
        miss_default_test: builtins.float = ...,
        alias_test: builtins.float = ...,
        desc_test: builtins.float = ...,
        multiple_of_test: builtins.float = ...,
        example_test: builtins.float = ...,
        example_factory: builtins.float = ...,
        field_test: builtins.float = ...,
        type_test: builtins.float = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["alias_test",b"alias_test","const_test",b"const_test","default_factory_test",b"default_factory_test","default_test",b"default_test","desc_test",b"desc_test","example_factory",b"example_factory","example_test",b"example_test","field_test",b"field_test","in_test",b"in_test","miss_default_test",b"miss_default_test","multiple_of_test",b"multiple_of_test","not_enable_test",b"not_enable_test","not_in_test",b"not_in_test","range_e_test",b"range_e_test","range_test",b"range_test","type_test",b"type_test"]) -> None: ...
global___FloatTest = FloatTest

class DoubleTest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    CONST_TEST_FIELD_NUMBER: builtins.int
    RANGE_E_TEST_FIELD_NUMBER: builtins.int
    RANGE_TEST_FIELD_NUMBER: builtins.int
    IN_TEST_FIELD_NUMBER: builtins.int
    NOT_IN_TEST_FIELD_NUMBER: builtins.int
    DEFAULT_TEST_FIELD_NUMBER: builtins.int
    NOT_ENABLE_TEST_FIELD_NUMBER: builtins.int
    DEFAULT_FACTORY_TEST_FIELD_NUMBER: builtins.int
    MISS_DEFAULT_TEST_FIELD_NUMBER: builtins.int
    ALIAS_TEST_FIELD_NUMBER: builtins.int
    DESC_TEST_FIELD_NUMBER: builtins.int
    MULTIPLE_OF_TEST_FIELD_NUMBER: builtins.int
    EXAMPLE_TEST_FIELD_NUMBER: builtins.int
    EXAMPLE_FACTORY_FIELD_NUMBER: builtins.int
    FIELD_TEST_FIELD_NUMBER: builtins.int
    TYPE_TEST_FIELD_NUMBER: builtins.int
    const_test: builtins.float
    range_e_test: builtins.float
    range_test: builtins.float
    in_test: builtins.float
    not_in_test: builtins.float
    default_test: builtins.float
    not_enable_test: builtins.float
    default_factory_test: builtins.float
    miss_default_test: builtins.float
    alias_test: builtins.float
    desc_test: builtins.float
    multiple_of_test: builtins.float
    example_test: builtins.float
    example_factory: builtins.float
    field_test: builtins.float
    type_test: builtins.float
    def __init__(self,
        *,
        const_test: builtins.float = ...,
        range_e_test: builtins.float = ...,
        range_test: builtins.float = ...,
        in_test: builtins.float = ...,
        not_in_test: builtins.float = ...,
        default_test: builtins.float = ...,
        not_enable_test: builtins.float = ...,
        default_factory_test: builtins.float = ...,
        miss_default_test: builtins.float = ...,
        alias_test: builtins.float = ...,
        desc_test: builtins.float = ...,
        multiple_of_test: builtins.float = ...,
        example_test: builtins.float = ...,
        example_factory: builtins.float = ...,
        field_test: builtins.float = ...,
        type_test: builtins.float = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["alias_test",b"alias_test","const_test",b"const_test","default_factory_test",b"default_factory_test","default_test",b"default_test","desc_test",b"desc_test","example_factory",b"example_factory","example_test",b"example_test","field_test",b"field_test","in_test",b"in_test","miss_default_test",b"miss_default_test","multiple_of_test",b"multiple_of_test","not_enable_test",b"not_enable_test","not_in_test",b"not_in_test","range_e_test",b"range_e_test","range_test",b"range_test","type_test",b"type_test"]) -> None: ...
global___DoubleTest = DoubleTest

class Int32Test(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    CONST_TEST_FIELD_NUMBER: builtins.int
    RANGE_E_TEST_FIELD_NUMBER: builtins.int
    RANGE_TEST_FIELD_NUMBER: builtins.int
    IN_TEST_FIELD_NUMBER: builtins.int
    NOT_IN_TEST_FIELD_NUMBER: builtins.int
    DEFAULT_TEST_FIELD_NUMBER: builtins.int
    NOT_ENABLE_TEST_FIELD_NUMBER: builtins.int
    DEFAULT_FACTORY_TEST_FIELD_NUMBER: builtins.int
    MISS_DEFAULT_TEST_FIELD_NUMBER: builtins.int
    ALIAS_TEST_FIELD_NUMBER: builtins.int
    DESC_TEST_FIELD_NUMBER: builtins.int
    MULTIPLE_OF_TEST_FIELD_NUMBER: builtins.int
    EXAMPLE_TEST_FIELD_NUMBER: builtins.int
    EXAMPLE_FACTORY_FIELD_NUMBER: builtins.int
    FIELD_TEST_FIELD_NUMBER: builtins.int
    TYPE_TEST_FIELD_NUMBER: builtins.int
    const_test: builtins.int
    range_e_test: builtins.int
    range_test: builtins.int
    in_test: builtins.int
    not_in_test: builtins.int
    default_test: builtins.int
    not_enable_test: builtins.int
    default_factory_test: builtins.int
    miss_default_test: builtins.int
    alias_test: builtins.int
    desc_test: builtins.int
    multiple_of_test: builtins.int
    example_test: builtins.int
    example_factory: builtins.int
    field_test: builtins.int
    type_test: builtins.int
    def __init__(self,
        *,
        const_test: builtins.int = ...,
        range_e_test: builtins.int = ...,
        range_test: builtins.int = ...,
        in_test: builtins.int = ...,
        not_in_test: builtins.int = ...,
        default_test: builtins.int = ...,
        not_enable_test: builtins.int = ...,
        default_factory_test: builtins.int = ...,
        miss_default_test: builtins.int = ...,
        alias_test: builtins.int = ...,
        desc_test: builtins.int = ...,
        multiple_of_test: builtins.int = ...,
        example_test: builtins.int = ...,
        example_factory: builtins.int = ...,
        field_test: builtins.int = ...,
        type_test: builtins.int = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["alias_test",b"alias_test","const_test",b"const_test","default_factory_test",b"default_factory_test","default_test",b"default_test","desc_test",b"desc_test","example_factory",b"example_factory","example_test",b"example_test","field_test",b"field_test","in_test",b"in_test","miss_default_test",b"miss_default_test","multiple_of_test",b"multiple_of_test","not_enable_test",b"not_enable_test","not_in_test",b"not_in_test","range_e_test",b"range_e_test","range_test",b"range_test","type_test",b"type_test"]) -> None: ...
global___Int32Test = Int32Test

class Int64Test(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    CONST_TEST_FIELD_NUMBER: builtins.int
    RANGE_E_TEST_FIELD_NUMBER: builtins.int
    RANGE_TEST_FIELD_NUMBER: builtins.int
    IN_TEST_FIELD_NUMBER: builtins.int
    NOT_IN_TEST_FIELD_NUMBER: builtins.int
    DEFAULT_TEST_FIELD_NUMBER: builtins.int
    NOT_ENABLE_TEST_FIELD_NUMBER: builtins.int
    DEFAULT_FACTORY_TEST_FIELD_NUMBER: builtins.int
    MISS_DEFAULT_TEST_FIELD_NUMBER: builtins.int
    ALIAS_TEST_FIELD_NUMBER: builtins.int
    DESC_TEST_FIELD_NUMBER: builtins.int
    MULTIPLE_OF_TEST_FIELD_NUMBER: builtins.int
    EXAMPLE_TEST_FIELD_NUMBER: builtins.int
    EXAMPLE_FACTORY_FIELD_NUMBER: builtins.int
    FIELD_TEST_FIELD_NUMBER: builtins.int
    TYPE_TEST_FIELD_NUMBER: builtins.int
    const_test: builtins.int
    range_e_test: builtins.int
    range_test: builtins.int
    in_test: builtins.int
    not_in_test: builtins.int
    default_test: builtins.int
    not_enable_test: builtins.int
    default_factory_test: builtins.int
    miss_default_test: builtins.int
    alias_test: builtins.int
    desc_test: builtins.int
    multiple_of_test: builtins.int
    example_test: builtins.int
    example_factory: builtins.int
    field_test: builtins.int
    type_test: builtins.int
    def __init__(self,
        *,
        const_test: builtins.int = ...,
        range_e_test: builtins.int = ...,
        range_test: builtins.int = ...,
        in_test: builtins.int = ...,
        not_in_test: builtins.int = ...,
        default_test: builtins.int = ...,
        not_enable_test: builtins.int = ...,
        default_factory_test: builtins.int = ...,
        miss_default_test: builtins.int = ...,
        alias_test: builtins.int = ...,
        desc_test: builtins.int = ...,
        multiple_of_test: builtins.int = ...,
        example_test: builtins.int = ...,
        example_factory: builtins.int = ...,
        field_test: builtins.int = ...,
        type_test: builtins.int = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["alias_test",b"alias_test","const_test",b"const_test","default_factory_test",b"default_factory_test","default_test",b"default_test","desc_test",b"desc_test","example_factory",b"example_factory","example_test",b"example_test","field_test",b"field_test","in_test",b"in_test","miss_default_test",b"miss_default_test","multiple_of_test",b"multiple_of_test","not_enable_test",b"not_enable_test","not_in_test",b"not_in_test","range_e_test",b"range_e_test","range_test",b"range_test","type_test",b"type_test"]) -> None: ...
global___Int64Test = Int64Test

class Uint32Test(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    CONST_TEST_FIELD_NUMBER: builtins.int
    RANGE_E_TEST_FIELD_NUMBER: builtins.int
    RANGE_TEST_FIELD_NUMBER: builtins.int
    IN_TEST_FIELD_NUMBER: builtins.int
    NOT_IN_TEST_FIELD_NUMBER: builtins.int
    DEFAULT_TEST_FIELD_NUMBER: builtins.int
    NOT_ENABLE_TEST_FIELD_NUMBER: builtins.int
    DEFAULT_FACTORY_TEST_FIELD_NUMBER: builtins.int
    MISS_DEFAULT_TEST_FIELD_NUMBER: builtins.int
    ALIAS_TEST_FIELD_NUMBER: builtins.int
    DESC_TEST_FIELD_NUMBER: builtins.int
    MULTIPLE_OF_TEST_FIELD_NUMBER: builtins.int
    EXAMPLE_TEST_FIELD_NUMBER: builtins.int
    EXAMPLE_FACTORY_FIELD_NUMBER: builtins.int
    FIELD_TEST_FIELD_NUMBER: builtins.int
    TYPE_TEST_FIELD_NUMBER: builtins.int
    const_test: builtins.int
    range_e_test: builtins.int
    range_test: builtins.int
    in_test: builtins.int
    not_in_test: builtins.int
    default_test: builtins.int
    not_enable_test: builtins.int
    default_factory_test: builtins.int
    miss_default_test: builtins.int
    alias_test: builtins.int
    desc_test: builtins.int
    multiple_of_test: builtins.int
    example_test: builtins.int
    example_factory: builtins.int
    field_test: builtins.int
    type_test: builtins.int
    def __init__(self,
        *,
        const_test: builtins.int = ...,
        range_e_test: builtins.int = ...,
        range_test: builtins.int = ...,
        in_test: builtins.int = ...,
        not_in_test: builtins.int = ...,
        default_test: builtins.int = ...,
        not_enable_test: builtins.int = ...,
        default_factory_test: builtins.int = ...,
        miss_default_test: builtins.int = ...,
        alias_test: builtins.int = ...,
        desc_test: builtins.int = ...,
        multiple_of_test: builtins.int = ...,
        example_test: builtins.int = ...,
        example_factory: builtins.int = ...,
        field_test: builtins.int = ...,
        type_test: builtins.int = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["alias_test",b"alias_test","const_test",b"const_test","default_factory_test",b"default_factory_test","default_test",b"default_test","desc_test",b"desc_test","example_factory",b"example_factory","example_test",b"example_test","field_test",b"field_test","in_test",b"in_test","miss_default_test",b"miss_default_test","multiple_of_test",b"multiple_of_test","not_enable_test",b"not_enable_test","not_in_test",b"not_in_test","range_e_test",b"range_e_test","range_test",b"range_test","type_test",b"type_test"]) -> None: ...
global___Uint32Test = Uint32Test

class Sint32Test(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    CONST_TEST_FIELD_NUMBER: builtins.int
    RANGE_E_TEST_FIELD_NUMBER: builtins.int
    RANGE_TEST_FIELD_NUMBER: builtins.int
    IN_TEST_FIELD_NUMBER: builtins.int
    NOT_IN_TEST_FIELD_NUMBER: builtins.int
    DEFAULT_TEST_FIELD_NUMBER: builtins.int
    NOT_ENABLE_TEST_FIELD_NUMBER: builtins.int
    DEFAULT_FACTORY_TEST_FIELD_NUMBER: builtins.int
    MISS_DEFAULT_TEST_FIELD_NUMBER: builtins.int
    ALIAS_TEST_FIELD_NUMBER: builtins.int
    DESC_TEST_FIELD_NUMBER: builtins.int
    MULTIPLE_OF_TEST_FIELD_NUMBER: builtins.int
    EXAMPLE_TEST_FIELD_NUMBER: builtins.int
    EXAMPLE_FACTORY_FIELD_NUMBER: builtins.int
    FIELD_TEST_FIELD_NUMBER: builtins.int
    TYPE_TEST_FIELD_NUMBER: builtins.int
    const_test: builtins.int
    range_e_test: builtins.int
    range_test: builtins.int
    in_test: builtins.int
    not_in_test: builtins.int
    default_test: builtins.int
    not_enable_test: builtins.int
    default_factory_test: builtins.int
    miss_default_test: builtins.int
    alias_test: builtins.int
    desc_test: builtins.int
    multiple_of_test: builtins.int
    example_test: builtins.int
    example_factory: builtins.int
    field_test: builtins.int
    type_test: builtins.int
    def __init__(self,
        *,
        const_test: builtins.int = ...,
        range_e_test: builtins.int = ...,
        range_test: builtins.int = ...,
        in_test: builtins.int = ...,
        not_in_test: builtins.int = ...,
        default_test: builtins.int = ...,
        not_enable_test: builtins.int = ...,
        default_factory_test: builtins.int = ...,
        miss_default_test: builtins.int = ...,
        alias_test: builtins.int = ...,
        desc_test: builtins.int = ...,
        multiple_of_test: builtins.int = ...,
        example_test: builtins.int = ...,
        example_factory: builtins.int = ...,
        field_test: builtins.int = ...,
        type_test: builtins.int = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["alias_test",b"alias_test","const_test",b"const_test","default_factory_test",b"default_factory_test","default_test",b"default_test","desc_test",b"desc_test","example_factory",b"example_factory","example_test",b"example_test","field_test",b"field_test","in_test",b"in_test","miss_default_test",b"miss_default_test","multiple_of_test",b"multiple_of_test","not_enable_test",b"not_enable_test","not_in_test",b"not_in_test","range_e_test",b"range_e_test","range_test",b"range_test","type_test",b"type_test"]) -> None: ...
global___Sint32Test = Sint32Test

class Uint64Test(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    CONST_TEST_FIELD_NUMBER: builtins.int
    RANGE_E_TEST_FIELD_NUMBER: builtins.int
    RANGE_TEST_FIELD_NUMBER: builtins.int
    IN_TEST_FIELD_NUMBER: builtins.int
    NOT_IN_TEST_FIELD_NUMBER: builtins.int
    DEFAULT_TEST_FIELD_NUMBER: builtins.int
    NOT_ENABLE_TEST_FIELD_NUMBER: builtins.int
    DEFAULT_FACTORY_TEST_FIELD_NUMBER: builtins.int
    MISS_DEFAULT_TEST_FIELD_NUMBER: builtins.int
    ALIAS_TEST_FIELD_NUMBER: builtins.int
    DESC_TEST_FIELD_NUMBER: builtins.int
    MULTIPLE_OF_TEST_FIELD_NUMBER: builtins.int
    EXAMPLE_TEST_FIELD_NUMBER: builtins.int
    EXAMPLE_FACTORY_FIELD_NUMBER: builtins.int
    FIELD_TEST_FIELD_NUMBER: builtins.int
    TYPE_TEST_FIELD_NUMBER: builtins.int
    const_test: builtins.int
    range_e_test: builtins.int
    range_test: builtins.int
    in_test: builtins.int
    not_in_test: builtins.int
    default_test: builtins.int
    not_enable_test: builtins.int
    default_factory_test: builtins.int
    miss_default_test: builtins.int
    alias_test: builtins.int
    desc_test: builtins.int
    multiple_of_test: builtins.int
    example_test: builtins.int
    example_factory: builtins.int
    field_test: builtins.int
    type_test: builtins.int
    def __init__(self,
        *,
        const_test: builtins.int = ...,
        range_e_test: builtins.int = ...,
        range_test: builtins.int = ...,
        in_test: builtins.int = ...,
        not_in_test: builtins.int = ...,
        default_test: builtins.int = ...,
        not_enable_test: builtins.int = ...,
        default_factory_test: builtins.int = ...,
        miss_default_test: builtins.int = ...,
        alias_test: builtins.int = ...,
        desc_test: builtins.int = ...,
        multiple_of_test: builtins.int = ...,
        example_test: builtins.int = ...,
        example_factory: builtins.int = ...,
        field_test: builtins.int = ...,
        type_test: builtins.int = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["alias_test",b"alias_test","const_test",b"const_test","default_factory_test",b"default_factory_test","default_test",b"default_test","desc_test",b"desc_test","example_factory",b"example_factory","example_test",b"example_test","field_test",b"field_test","in_test",b"in_test","miss_default_test",b"miss_default_test","multiple_of_test",b"multiple_of_test","not_enable_test",b"not_enable_test","not_in_test",b"not_in_test","range_e_test",b"range_e_test","range_test",b"range_test","type_test",b"type_test"]) -> None: ...
global___Uint64Test = Uint64Test

class Sint64Test(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    CONST_TEST_FIELD_NUMBER: builtins.int
    RANGE_E_TEST_FIELD_NUMBER: builtins.int
    RANGE_TEST_FIELD_NUMBER: builtins.int
    IN_TEST_FIELD_NUMBER: builtins.int
    NOT_IN_TEST_FIELD_NUMBER: builtins.int
    DEFAULT_TEST_FIELD_NUMBER: builtins.int
    NOT_ENABLE_TEST_FIELD_NUMBER: builtins.int
    DEFAULT_FACTORY_TEST_FIELD_NUMBER: builtins.int
    MISS_DEFAULT_TEST_FIELD_NUMBER: builtins.int
    ALIAS_TEST_FIELD_NUMBER: builtins.int
    DESC_TEST_FIELD_NUMBER: builtins.int
    MULTIPLE_OF_TEST_FIELD_NUMBER: builtins.int
    EXAMPLE_TEST_FIELD_NUMBER: builtins.int
    EXAMPLE_FACTORY_FIELD_NUMBER: builtins.int
    FIELD_TEST_FIELD_NUMBER: builtins.int
    TYPE_TEST_FIELD_NUMBER: builtins.int
    const_test: builtins.int
    range_e_test: builtins.int
    range_test: builtins.int
    in_test: builtins.int
    not_in_test: builtins.int
    default_test: builtins.int
    not_enable_test: builtins.int
    default_factory_test: builtins.int
    miss_default_test: builtins.int
    alias_test: builtins.int
    desc_test: builtins.int
    multiple_of_test: builtins.int
    example_test: builtins.int
    example_factory: builtins.int
    field_test: builtins.int
    type_test: builtins.int
    def __init__(self,
        *,
        const_test: builtins.int = ...,
        range_e_test: builtins.int = ...,
        range_test: builtins.int = ...,
        in_test: builtins.int = ...,
        not_in_test: builtins.int = ...,
        default_test: builtins.int = ...,
        not_enable_test: builtins.int = ...,
        default_factory_test: builtins.int = ...,
        miss_default_test: builtins.int = ...,
        alias_test: builtins.int = ...,
        desc_test: builtins.int = ...,
        multiple_of_test: builtins.int = ...,
        example_test: builtins.int = ...,
        example_factory: builtins.int = ...,
        field_test: builtins.int = ...,
        type_test: builtins.int = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["alias_test",b"alias_test","const_test",b"const_test","default_factory_test",b"default_factory_test","default_test",b"default_test","desc_test",b"desc_test","example_factory",b"example_factory","example_test",b"example_test","field_test",b"field_test","in_test",b"in_test","miss_default_test",b"miss_default_test","multiple_of_test",b"multiple_of_test","not_enable_test",b"not_enable_test","not_in_test",b"not_in_test","range_e_test",b"range_e_test","range_test",b"range_test","type_test",b"type_test"]) -> None: ...
global___Sint64Test = Sint64Test

class Fixed32Test(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    CONST_TEST_FIELD_NUMBER: builtins.int
    RANGE_E_TEST_FIELD_NUMBER: builtins.int
    RANGE_TEST_FIELD_NUMBER: builtins.int
    IN_TEST_FIELD_NUMBER: builtins.int
    NOT_IN_TEST_FIELD_NUMBER: builtins.int
    DEFAULT_TEST_FIELD_NUMBER: builtins.int
    NOT_ENABLE_TEST_FIELD_NUMBER: builtins.int
    DEFAULT_FACTORY_TEST_FIELD_NUMBER: builtins.int
    MISS_DEFAULT_TEST_FIELD_NUMBER: builtins.int
    ALIAS_TEST_FIELD_NUMBER: builtins.int
    DESC_TEST_FIELD_NUMBER: builtins.int
    MULTIPLE_OF_TEST_FIELD_NUMBER: builtins.int
    EXAMPLE_TEST_FIELD_NUMBER: builtins.int
    EXAMPLE_FACTORY_FIELD_NUMBER: builtins.int
    FIELD_TEST_FIELD_NUMBER: builtins.int
    TYPE_TEST_FIELD_NUMBER: builtins.int
    const_test: builtins.int
    range_e_test: builtins.int
    range_test: builtins.int
    in_test: builtins.int
    not_in_test: builtins.int
    default_test: builtins.int
    not_enable_test: builtins.int
    default_factory_test: builtins.int
    miss_default_test: builtins.int
    alias_test: builtins.int
    desc_test: builtins.int
    multiple_of_test: builtins.int
    example_test: builtins.int
    example_factory: builtins.int
    field_test: builtins.int
    type_test: builtins.int
    def __init__(self,
        *,
        const_test: builtins.int = ...,
        range_e_test: builtins.int = ...,
        range_test: builtins.int = ...,
        in_test: builtins.int = ...,
        not_in_test: builtins.int = ...,
        default_test: builtins.int = ...,
        not_enable_test: builtins.int = ...,
        default_factory_test: builtins.int = ...,
        miss_default_test: builtins.int = ...,
        alias_test: builtins.int = ...,
        desc_test: builtins.int = ...,
        multiple_of_test: builtins.int = ...,
        example_test: builtins.int = ...,
        example_factory: builtins.int = ...,
        field_test: builtins.int = ...,
        type_test: builtins.int = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["alias_test",b"alias_test","const_test",b"const_test","default_factory_test",b"default_factory_test","default_test",b"default_test","desc_test",b"desc_test","example_factory",b"example_factory","example_test",b"example_test","field_test",b"field_test","in_test",b"in_test","miss_default_test",b"miss_default_test","multiple_of_test",b"multiple_of_test","not_enable_test",b"not_enable_test","not_in_test",b"not_in_test","range_e_test",b"range_e_test","range_test",b"range_test","type_test",b"type_test"]) -> None: ...
global___Fixed32Test = Fixed32Test

class Fixed64Test(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    CONST_TEST_FIELD_NUMBER: builtins.int
    RANGE_E_TEST_FIELD_NUMBER: builtins.int
    RANGE_TEST_FIELD_NUMBER: builtins.int
    IN_TEST_FIELD_NUMBER: builtins.int
    NOT_IN_TEST_FIELD_NUMBER: builtins.int
    DEFAULT_TEST_FIELD_NUMBER: builtins.int
    NOT_ENABLE_TEST_FIELD_NUMBER: builtins.int
    DEFAULT_FACTORY_TEST_FIELD_NUMBER: builtins.int
    MISS_DEFAULT_TEST_FIELD_NUMBER: builtins.int
    ALIAS_TEST_FIELD_NUMBER: builtins.int
    DESC_TEST_FIELD_NUMBER: builtins.int
    MULTIPLE_OF_TEST_FIELD_NUMBER: builtins.int
    EXAMPLE_TEST_FIELD_NUMBER: builtins.int
    EXAMPLE_FACTORY_FIELD_NUMBER: builtins.int
    FIELD_TEST_FIELD_NUMBER: builtins.int
    TYPE_TEST_FIELD_NUMBER: builtins.int
    const_test: builtins.int
    range_e_test: builtins.int
    range_test: builtins.int
    in_test: builtins.int
    not_in_test: builtins.int
    default_test: builtins.int
    not_enable_test: builtins.int
    default_factory_test: builtins.int
    miss_default_test: builtins.int
    alias_test: builtins.int
    desc_test: builtins.int
    multiple_of_test: builtins.int
    example_test: builtins.int
    example_factory: builtins.int
    field_test: builtins.int
    type_test: builtins.int
    def __init__(self,
        *,
        const_test: builtins.int = ...,
        range_e_test: builtins.int = ...,
        range_test: builtins.int = ...,
        in_test: builtins.int = ...,
        not_in_test: builtins.int = ...,
        default_test: builtins.int = ...,
        not_enable_test: builtins.int = ...,
        default_factory_test: builtins.int = ...,
        miss_default_test: builtins.int = ...,
        alias_test: builtins.int = ...,
        desc_test: builtins.int = ...,
        multiple_of_test: builtins.int = ...,
        example_test: builtins.int = ...,
        example_factory: builtins.int = ...,
        field_test: builtins.int = ...,
        type_test: builtins.int = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["alias_test",b"alias_test","const_test",b"const_test","default_factory_test",b"default_factory_test","default_test",b"default_test","desc_test",b"desc_test","example_factory",b"example_factory","example_test",b"example_test","field_test",b"field_test","in_test",b"in_test","miss_default_test",b"miss_default_test","multiple_of_test",b"multiple_of_test","not_enable_test",b"not_enable_test","not_in_test",b"not_in_test","range_e_test",b"range_e_test","range_test",b"range_test","type_test",b"type_test"]) -> None: ...
global___Fixed64Test = Fixed64Test

class Sfixed32Test(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    CONST_TEST_FIELD_NUMBER: builtins.int
    RANGE_E_TEST_FIELD_NUMBER: builtins.int
    RANGE_TEST_FIELD_NUMBER: builtins.int
    IN_TEST_FIELD_NUMBER: builtins.int
    NOT_IN_TEST_FIELD_NUMBER: builtins.int
    DEFAULT_TEST_FIELD_NUMBER: builtins.int
    NOT_ENABLE_TEST_FIELD_NUMBER: builtins.int
    DEFAULT_FACTORY_TEST_FIELD_NUMBER: builtins.int
    MISS_DEFAULT_TEST_FIELD_NUMBER: builtins.int
    ALIAS_TEST_FIELD_NUMBER: builtins.int
    DESC_TEST_FIELD_NUMBER: builtins.int
    MULTIPLE_OF_TEST_FIELD_NUMBER: builtins.int
    EXAMPLE_TEST_FIELD_NUMBER: builtins.int
    EXAMPLE_FACTORY_FIELD_NUMBER: builtins.int
    FIELD_TEST_FIELD_NUMBER: builtins.int
    TYPE_TEST_FIELD_NUMBER: builtins.int
    const_test: builtins.int
    range_e_test: builtins.int
    range_test: builtins.int
    in_test: builtins.int
    not_in_test: builtins.int
    default_test: builtins.int
    not_enable_test: builtins.int
    default_factory_test: builtins.int
    miss_default_test: builtins.int
    alias_test: builtins.int
    desc_test: builtins.int
    multiple_of_test: builtins.int
    example_test: builtins.int
    example_factory: builtins.int
    field_test: builtins.int
    type_test: builtins.int
    def __init__(self,
        *,
        const_test: builtins.int = ...,
        range_e_test: builtins.int = ...,
        range_test: builtins.int = ...,
        in_test: builtins.int = ...,
        not_in_test: builtins.int = ...,
        default_test: builtins.int = ...,
        not_enable_test: builtins.int = ...,
        default_factory_test: builtins.int = ...,
        miss_default_test: builtins.int = ...,
        alias_test: builtins.int = ...,
        desc_test: builtins.int = ...,
        multiple_of_test: builtins.int = ...,
        example_test: builtins.int = ...,
        example_factory: builtins.int = ...,
        field_test: builtins.int = ...,
        type_test: builtins.int = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["alias_test",b"alias_test","const_test",b"const_test","default_factory_test",b"default_factory_test","default_test",b"default_test","desc_test",b"desc_test","example_factory",b"example_factory","example_test",b"example_test","field_test",b"field_test","in_test",b"in_test","miss_default_test",b"miss_default_test","multiple_of_test",b"multiple_of_test","not_enable_test",b"not_enable_test","not_in_test",b"not_in_test","range_e_test",b"range_e_test","range_test",b"range_test","type_test",b"type_test"]) -> None: ...
global___Sfixed32Test = Sfixed32Test

class Sfixed64Test(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    CONST_TEST_FIELD_NUMBER: builtins.int
    RANGE_E_TEST_FIELD_NUMBER: builtins.int
    RANGE_TEST_FIELD_NUMBER: builtins.int
    IN_TEST_FIELD_NUMBER: builtins.int
    NOT_IN_TEST_FIELD_NUMBER: builtins.int
    DEFAULT_TEST_FIELD_NUMBER: builtins.int
    NOT_ENABLE_TEST_FIELD_NUMBER: builtins.int
    DEFAULT_FACTORY_TEST_FIELD_NUMBER: builtins.int
    MISS_DEFAULT_TEST_FIELD_NUMBER: builtins.int
    ALIAS_TEST_FIELD_NUMBER: builtins.int
    DESC_TEST_FIELD_NUMBER: builtins.int
    MULTIPLE_OF_TEST_FIELD_NUMBER: builtins.int
    EXAMPLE_TEST_FIELD_NUMBER: builtins.int
    EXAMPLE_FACTORY_FIELD_NUMBER: builtins.int
    FIELD_TEST_FIELD_NUMBER: builtins.int
    TYPE_TEST_FIELD_NUMBER: builtins.int
    const_test: builtins.int
    range_e_test: builtins.int
    range_test: builtins.int
    in_test: builtins.int
    not_in_test: builtins.int
    default_test: builtins.int
    not_enable_test: builtins.int
    default_factory_test: builtins.int
    miss_default_test: builtins.int
    alias_test: builtins.int
    desc_test: builtins.int
    multiple_of_test: builtins.int
    example_test: builtins.int
    example_factory: builtins.int
    field_test: builtins.int
    type_test: builtins.int
    def __init__(self,
        *,
        const_test: builtins.int = ...,
        range_e_test: builtins.int = ...,
        range_test: builtins.int = ...,
        in_test: builtins.int = ...,
        not_in_test: builtins.int = ...,
        default_test: builtins.int = ...,
        not_enable_test: builtins.int = ...,
        default_factory_test: builtins.int = ...,
        miss_default_test: builtins.int = ...,
        alias_test: builtins.int = ...,
        desc_test: builtins.int = ...,
        multiple_of_test: builtins.int = ...,
        example_test: builtins.int = ...,
        example_factory: builtins.int = ...,
        field_test: builtins.int = ...,
        type_test: builtins.int = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["alias_test",b"alias_test","const_test",b"const_test","default_factory_test",b"default_factory_test","default_test",b"default_test","desc_test",b"desc_test","example_factory",b"example_factory","example_test",b"example_test","field_test",b"field_test","in_test",b"in_test","miss_default_test",b"miss_default_test","multiple_of_test",b"multiple_of_test","not_enable_test",b"not_enable_test","not_in_test",b"not_in_test","range_e_test",b"range_e_test","range_test",b"range_test","type_test",b"type_test"]) -> None: ...
global___Sfixed64Test = Sfixed64Test
