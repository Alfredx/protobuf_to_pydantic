# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: example_proto/validate/demo.proto
"""Generated protocol buffer code."""
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from google.protobuf import any_pb2 as google_dot_protobuf_dot_any__pb2
from google.protobuf import duration_pb2 as google_dot_protobuf_dot_duration__pb2
from google.protobuf import timestamp_pb2 as google_dot_protobuf_dot_timestamp__pb2
from example.python_example_proto_code.example_proto.common import validate_pb2 as example__proto_dot_common_dot_validate__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n!example_proto/validate/demo.proto\x12\rvalidate_test\x1a\x19google/protobuf/any.proto\x1a\x1egoogle/protobuf/duration.proto\x1a\x1fgoogle/protobuf/timestamp.proto\x1a#example_proto/common/validate.proto\"\xe7\x01\n\tFloatTest\x12\x1e\n\nconst_test\x18\x01 \x01(\x02\x42\n\xfa\x42\x07\n\x05\r\x00\x00\x80?\x12%\n\x0crange_e_test\x18\x02 \x01(\x02\x42\x0f\xfa\x42\x0c\n\n\x1d\x00\x00 A-\x00\x00\x80?\x12#\n\nrange_test\x18\x03 \x01(\x02\x42\x0f\xfa\x42\x0c\n\n\x15\x00\x00 A%\x00\x00\x80?\x12%\n\x07in_test\x18\x04 \x01(\x02\x42\x14\xfa\x42\x11\n\x0f\x35\x00\x00\x80?5\x00\x00\x00@5\x00\x00@@\x12)\n\x0bnot_in_test\x18\x05 \x01(\x02\x42\x14\xfa\x42\x11\n\x0f=\x00\x00\x80?=\x00\x00\x00@=\x00\x00@@\x12\x1c\n\x0bignore_test\x18\x06 \x01(\x02\x42\x07\xfa\x42\x04\n\x02@\x01\"\x94\x02\n\nDoubleTest\x12\"\n\nconst_test\x18\x01 \x01(\x01\x42\x0e\xfa\x42\x0b\x12\t\t\x00\x00\x00\x00\x00\x00\xf0?\x12-\n\x0crange_e_test\x18\x02 \x01(\x01\x42\x17\xfa\x42\x14\x12\x12\x19\x00\x00\x00\x00\x00\x00$@)\x00\x00\x00\x00\x00\x00\xf0?\x12+\n\nrange_test\x18\x03 \x01(\x01\x42\x17\xfa\x42\x14\x12\x12\x11\x00\x00\x00\x00\x00\x00$@!\x00\x00\x00\x00\x00\x00\xf0?\x12\x31\n\x07in_test\x18\x04 \x01(\x01\x42 \xfa\x42\x1d\x12\x1b\x31\x00\x00\x00\x00\x00\x00\xf0?1\x00\x00\x00\x00\x00\x00\x00@1\x00\x00\x00\x00\x00\x00\x08@\x12\x35\n\x0bnot_in_test\x18\x05 \x01(\x01\x42 \xfa\x42\x1d\x12\x1b\x31\x00\x00\x00\x00\x00\x00\xf0?1\x00\x00\x00\x00\x00\x00\x00@1\x00\x00\x00\x00\x00\x00\x08@\x12\x1c\n\x0bignore_test\x18\x06 \x01(\x01\x42\x07\xfa\x42\x04\x12\x02@\x01\"\xc6\x01\n\tInt32Test\x12\x1b\n\nconst_test\x18\x01 \x01(\x05\x42\x07\xfa\x42\x04\x1a\x02\x08\x01\x12\x1f\n\x0crange_e_test\x18\x02 \x01(\x05\x42\t\xfa\x42\x06\x1a\x04\x18\n(\x01\x12\x1d\n\nrange_test\x18\x03 \x01(\x05\x42\t\xfa\x42\x06\x1a\x04\x10\n \x01\x12\x1c\n\x07in_test\x18\x04 \x01(\x05\x42\x0b\xfa\x42\x08\x1a\x06\x30\x01\x30\x02\x30\x03\x12 \n\x0bnot_in_test\x18\x05 \x01(\x05\x42\x0b\xfa\x42\x08\x1a\x06\x30\x01\x30\x02\x30\x03\x12\x1c\n\x0bignore_test\x18\x06 \x01(\x05\x42\x07\xfa\x42\x04\x1a\x02@\x01\"\xc7\x01\n\nUint32Test\x12\x1b\n\nconst_test\x18\x01 \x01(\rB\x07\xfa\x42\x04*\x02\x08\x01\x12\x1f\n\x0crange_e_test\x18\x02 \x01(\rB\t\xfa\x42\x06*\x04\x18\n(\x01\x12\x1d\n\nrange_test\x18\x03 \x01(\rB\t\xfa\x42\x06*\x04\x10\n \x01\x12\x1c\n\x07in_test\x18\x04 \x01(\rB\x0b\xfa\x42\x08*\x06\x30\x01\x30\x02\x30\x03\x12 \n\x0bnot_in_test\x18\x05 \x01(\rB\x0b\xfa\x42\x08*\x06\x30\x01\x30\x02\x30\x03\x12\x1c\n\x0bignore_test\x18\x06 \x01(\rB\x07\xfa\x42\x04*\x02@\x01\"\xc7\x01\n\nSint32Test\x12\x1b\n\nconst_test\x18\x01 \x01(\x11\x42\x07\xfa\x42\x04:\x02\x08\x02\x12\x1f\n\x0crange_e_test\x18\x02 \x01(\x11\x42\t\xfa\x42\x06:\x04\x18\x14(\x02\x12\x1d\n\nrange_test\x18\x03 \x01(\x11\x42\t\xfa\x42\x06:\x04\x10\x14 \x02\x12\x1c\n\x07in_test\x18\x04 \x01(\x11\x42\x0b\xfa\x42\x08:\x06\x30\x02\x30\x04\x30\x06\x12 \n\x0bnot_in_test\x18\x05 \x01(\x11\x42\x0b\xfa\x42\x08:\x06\x30\x02\x30\x04\x30\x06\x12\x1c\n\x0bignore_test\x18\x06 \x01(\x11\x42\x07\xfa\x42\x04:\x02@\x01\"\xc6\x01\n\tInt64Test\x12\x1b\n\nconst_test\x18\x01 \x01(\x03\x42\x07\xfa\x42\x04\"\x02\x08\x01\x12\x1f\n\x0crange_e_test\x18\x02 \x01(\x03\x42\t\xfa\x42\x06\"\x04\x18\n(\x01\x12\x1d\n\nrange_test\x18\x03 \x01(\x03\x42\t\xfa\x42\x06\"\x04\x10\n \x01\x12\x1c\n\x07in_test\x18\x04 \x01(\x03\x42\x0b\xfa\x42\x08\"\x06\x30\x01\x30\x02\x30\x03\x12 \n\x0bnot_in_test\x18\x05 \x01(\x03\x42\x0b\xfa\x42\x08\"\x06\x30\x01\x30\x02\x30\x03\x12\x1c\n\x0bignore_test\x18\x06 \x01(\x03\x42\x07\xfa\x42\x04\"\x02@\x01\"\xc7\x01\n\nUint64Test\x12\x1b\n\nconst_test\x18\x01 \x01(\x04\x42\x07\xfa\x42\x04\x32\x02\x08\x01\x12\x1f\n\x0crange_e_test\x18\x02 \x01(\x04\x42\t\xfa\x42\x06\x32\x04\x18\n(\x01\x12\x1d\n\nrange_test\x18\x03 \x01(\x04\x42\t\xfa\x42\x06\x32\x04\x10\n \x01\x12\x1c\n\x07in_test\x18\x04 \x01(\x04\x42\x0b\xfa\x42\x08\x32\x06\x30\x01\x30\x02\x30\x03\x12 \n\x0bnot_in_test\x18\x05 \x01(\x04\x42\x0b\xfa\x42\x08\x32\x06\x30\x01\x30\x02\x30\x03\x12\x1c\n\x0bignore_test\x18\x06 \x01(\x04\x42\x07\xfa\x42\x04\x32\x02@\x01\"\xc7\x01\n\nSint64Test\x12\x1b\n\nconst_test\x18\x01 \x01(\x12\x42\x07\xfa\x42\x04\x42\x02\x08\x02\x12\x1f\n\x0crange_e_test\x18\x02 \x01(\x12\x42\t\xfa\x42\x06\x42\x04\x18\x14(\x02\x12\x1d\n\nrange_test\x18\x03 \x01(\x12\x42\t\xfa\x42\x06\x42\x04\x10\x14 \x02\x12\x1c\n\x07in_test\x18\x04 \x01(\x12\x42\x0b\xfa\x42\x08\x42\x06\x30\x02\x30\x04\x30\x06\x12 \n\x0bnot_in_test\x18\x05 \x01(\x12\x42\x0b\xfa\x42\x08\x42\x06\x30\x02\x30\x04\x30\x06\x12\x1c\n\x0bignore_test\x18\x06 \x01(\x12\x42\x07\xfa\x42\x04\x42\x02@\x01\"\xe9\x01\n\x0b\x46ixed32Test\x12\x1e\n\nconst_test\x18\x01 \x01(\x07\x42\n\xfa\x42\x07J\x05\r\x01\x00\x00\x00\x12%\n\x0crange_e_test\x18\x02 \x01(\x07\x42\x0f\xfa\x42\x0cJ\n\x1d\n\x00\x00\x00-\x01\x00\x00\x00\x12#\n\nrange_test\x18\x03 \x01(\x07\x42\x0f\xfa\x42\x0cJ\n\x15\n\x00\x00\x00%\x01\x00\x00\x00\x12%\n\x07in_test\x18\x04 \x01(\x07\x42\x14\xfa\x42\x11J\x0f\x35\x01\x00\x00\x00\x35\x02\x00\x00\x00\x35\x03\x00\x00\x00\x12)\n\x0bnot_in_test\x18\x05 \x01(\x07\x42\x14\xfa\x42\x11J\x0f\x35\x01\x00\x00\x00\x35\x02\x00\x00\x00\x35\x03\x00\x00\x00\x12\x1c\n\x0bignore_test\x18\x06 \x01(\x07\x42\x07\xfa\x42\x04J\x02@\x01\"\xea\x01\n\x0cSfixed32Test\x12\x1e\n\nconst_test\x18\x01 \x01(\x0f\x42\n\xfa\x42\x07Z\x05\r\x01\x00\x00\x00\x12%\n\x0crange_e_test\x18\x02 \x01(\x0f\x42\x0f\xfa\x42\x0cZ\n\x1d\n\x00\x00\x00-\x01\x00\x00\x00\x12#\n\nrange_test\x18\x03 \x01(\x0f\x42\x0f\xfa\x42\x0cZ\n\x15\n\x00\x00\x00%\x01\x00\x00\x00\x12%\n\x07in_test\x18\x04 \x01(\x0f\x42\x14\xfa\x42\x11Z\x0f\x35\x01\x00\x00\x00\x35\x02\x00\x00\x00\x35\x03\x00\x00\x00\x12)\n\x0bnot_in_test\x18\x05 \x01(\x0f\x42\x14\xfa\x42\x11Z\x0f\x35\x01\x00\x00\x00\x35\x02\x00\x00\x00\x35\x03\x00\x00\x00\x12\x1c\n\x0bignore_test\x18\x06 \x01(\x0f\x42\x07\xfa\x42\x04Z\x02@\x01\"\x96\x02\n\x0cSfixed64Test\x12\"\n\nconst_test\x18\x01 \x01(\x10\x42\x0e\xfa\x42\x0b\x62\t\t\x01\x00\x00\x00\x00\x00\x00\x00\x12-\n\x0crange_e_test\x18\x02 \x01(\x10\x42\x17\xfa\x42\x14\x62\x12\x19\n\x00\x00\x00\x00\x00\x00\x00)\x01\x00\x00\x00\x00\x00\x00\x00\x12+\n\nrange_test\x18\x03 \x01(\x10\x42\x17\xfa\x42\x14\x62\x12\x11\n\x00\x00\x00\x00\x00\x00\x00!\x01\x00\x00\x00\x00\x00\x00\x00\x12\x31\n\x07in_test\x18\x04 \x01(\x10\x42 \xfa\x42\x1d\x62\x1b\x31\x01\x00\x00\x00\x00\x00\x00\x00\x31\x02\x00\x00\x00\x00\x00\x00\x00\x31\x03\x00\x00\x00\x00\x00\x00\x00\x12\x35\n\x0bnot_in_test\x18\x05 \x01(\x10\x42 \xfa\x42\x1d\x62\x1b\x31\x01\x00\x00\x00\x00\x00\x00\x00\x31\x02\x00\x00\x00\x00\x00\x00\x00\x31\x03\x00\x00\x00\x00\x00\x00\x00\x12\x1c\n\x0bignore_test\x18\x06 \x01(\x10\x42\x07\xfa\x42\x04\x62\x02@\x01\"F\n\x08\x42oolTest\x12\x1c\n\x0b\x62ool_1_test\x18\x01 \x01(\x08\x42\x07\xfa\x42\x04j\x02\x08\x01\x12\x1c\n\x0b\x62ool_2_test\x18\x02 \x01(\x08\x42\x07\xfa\x42\x04j\x02\x08\x00\"\xc5\x05\n\nStringTest\x12\x1e\n\nconst_test\x18\x01 \x01(\tB\n\xfa\x42\x07r\x05\n\x03\x61\x61\x61\x12\x1a\n\x08len_test\x18\x02 \x01(\tB\x08\xfa\x42\x05r\x03\x98\x01\x03\x12#\n\x10s_range_len_test\x18\x03 \x01(\tB\t\xfa\x42\x06r\x04\x10\x01\x18\x03\x12#\n\x10\x62_range_len_test\x18\x04 \x01(\tB\t\xfa\x42\x06r\x04 \x01(\x03\x12\"\n\x0cpattern_test\x18\x05 \x01(\tB\x0c\xfa\x42\tr\x07\x32\x05^test\x12\"\n\x0bprefix_test\x18\x06 \x01(\tB\r\xfa\x42\nr\x08:\x06prefix\x12\"\n\x0bsuffix_test\x18\x07 \x01(\tB\r\xfa\x42\nr\x08\x42\x06suffix\x12&\n\rcontains_test\x18\x08 \x01(\tB\x0f\xfa\x42\x0cr\nJ\x08\x63ontains\x12/\n\x11not_contains_test\x18\t \x01(\tB\x14\xfa\x42\x11r\x0f\xba\x01\x0cnot_contains\x12\x1f\n\x07in_test\x18\n \x01(\tB\x0e\xfa\x42\x0br\tR\x01\x61R\x01\x62R\x01\x63\x12#\n\x0bnot_in_test\x18\x0b \x01(\tB\x0e\xfa\x42\x0br\tZ\x01\x61Z\x01\x62Z\x01\x63\x12\x1b\n\nemail_test\x18\x0c \x01(\tB\x07\xfa\x42\x04r\x02`\x01\x12\x1e\n\rhostname_test\x18\r \x01(\tB\x07\xfa\x42\x04r\x02h\x01\x12\x18\n\x07ip_test\x18\x0e \x01(\tB\x07\xfa\x42\x04r\x02p\x01\x12\x1a\n\tipv4_test\x18\x0f \x01(\tB\x07\xfa\x42\x04r\x02x\x01\x12\x1b\n\tipv6_test\x18\x10 \x01(\tB\x08\xfa\x42\x05r\x03\x80\x01\x01\x12\x1a\n\x08uri_test\x18\x11 \x01(\tB\x08\xfa\x42\x05r\x03\x88\x01\x01\x12\x1e\n\x0curi_ref_test\x18\x12 \x01(\tB\x08\xfa\x42\x05r\x03\x90\x01\x01\x12\x1e\n\x0c\x61\x64\x64ress_test\x18\x13 \x01(\tB\x08\xfa\x42\x05r\x03\xa8\x01\x01\x12\x1b\n\tuuid_test\x18\x14 \x01(\tB\x08\xfa\x42\x05r\x03\xb0\x01\x01\x12\x1d\n\x0bignore_test\x18\x15 \x01(\tB\x08\xfa\x42\x05r\x03\xd0\x01\x01\"\xc4\x02\n\tBytesTest\x12\x1f\n\nconst_test\x18\x01 \x01(\x0c\x42\x0b\xfa\x42\x08z\x06\n\x04\x64\x65mo\x12\x19\n\x08len_test\x18\x02 \x01(\x0c\x42\x07\xfa\x42\x04z\x02h\x04\x12!\n\x0erange_len_test\x18\x03 \x01(\x0c\x42\t\xfa\x42\x06z\x04\x10\x01\x18\x04\x12\"\n\x0cpattern_test\x18\x04 \x01(\x0c\x42\x0c\xfa\x42\tz\x07\"\x05^test\x12\"\n\x0bprefix_test\x18\x05 \x01(\x0c\x42\r\xfa\x42\nz\x08*\x06prefix\x12\"\n\x0bsuffix_test\x18\x06 \x01(\x0c\x42\r\xfa\x42\nz\x08\x32\x06suffix\x12&\n\rcontains_test\x18\x07 \x01(\x0c\x42\x0f\xfa\x42\x0cz\n:\x08\x63ontains\x12\x1f\n\x07in_test\x18\x08 \x01(\x0c\x42\x0e\xfa\x42\x0bz\tB\x01\x61\x42\x01\x62\x42\x01\x63\x12#\n\x0bnot_in_test\x18\t \x01(\x0c\x42\x0e\xfa\x42\x0bz\tJ\x01\x61J\x01\x62J\x01\x63\"\xe3\x01\n\x08\x45numTest\x12\x32\n\nconst_test\x18\x01 \x01(\x0e\x32\x14.validate_test.StateB\x08\xfa\x42\x05\x82\x01\x02\x08\x02\x12\x39\n\x11\x64\x65\x66ined_only_test\x18\x02 \x01(\x0e\x32\x14.validate_test.StateB\x08\xfa\x42\x05\x82\x01\x02\x10\x01\x12\x31\n\x07in_test\x18\x03 \x01(\x0e\x32\x14.validate_test.StateB\n\xfa\x42\x07\x82\x01\x04\x18\x00\x18\x02\x12\x35\n\x0bnot_in_test\x18\x04 \x01(\x0e\x32\x14.validate_test.StateB\n\xfa\x42\x07\x82\x01\x04\x18\x00\x18\x02\"\xed\x04\n\x07MapTest\x12\x43\n\tpair_test\x18\x01 \x03(\x0b\x32$.validate_test.MapTest.PairTestEntryB\n\xfa\x42\x07\x9a\x01\x04\x08\x01\x10\x05\x12H\n\rno_parse_test\x18\x02 \x03(\x0b\x32\'.validate_test.MapTest.NoParseTestEntryB\x08\xfa\x42\x05\x9a\x01\x02\x18\x01\x12\x45\n\tkeys_test\x18\x03 \x03(\x0b\x32$.validate_test.MapTest.KeysTestEntryB\x0c\xfa\x42\t\x9a\x01\x06\"\x04r\x02\x10\x00\x12I\n\x0bvalues_test\x18\x04 \x03(\x0b\x32&.validate_test.MapTest.ValuesTestEntryB\x0c\xfa\x42\t\x9a\x01\x06*\x04\x1a\x02\x10\x00\x12\x45\n\x0bignore_test\x18\x05 \x03(\x0b\x32&.validate_test.MapTest.IgnoreTestEntryB\x08\xfa\x42\x05\x9a\x01\x02\x30\x01\x1a/\n\rPairTestEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\x05:\x02\x38\x01\x1a\x32\n\x10NoParseTestEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\x05:\x02\x38\x01\x1a/\n\rKeysTestEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\x05:\x02\x38\x01\x1a\x31\n\x0fValuesTestEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\x05:\x02\x38\x01\x1a\x31\n\x0fIgnoreTestEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\x05:\x02\x38\x01\"K\n\x0bMessageTest\x12\x1b\n\tskip_test\x18\x01 \x01(\tB\x08\xfa\x42\x05\x8a\x01\x02\x08\x01\x12\x1f\n\rrequired_test\x18\x02 \x01(\tB\x08\xfa\x42\x05\x8a\x01\x02\x10\x01\"\x90\x01\n\x0cRepeatedTest\x12\x1e\n\nrange_test\x18\x01 \x03(\tB\n\xfa\x42\x07\x92\x01\x04\x08\x01\x10\x05\x12\x1d\n\x0bunique_test\x18\x02 \x03(\tB\x08\xfa\x42\x05\x92\x01\x02\x18\x01\x12\"\n\nitems_test\x18\x03 \x03(\tB\x0e\xfa\x42\x0b\x92\x01\x08\"\x06r\x04\x10\x01\x18\x05\x12\x1d\n\x0bignore_test\x18\x04 \x03(\tB\x08\xfa\x42\x05\x92\x01\x02(\x01\"\xc7\x01\n\x07\x41nyTest\x12\x35\n\rrequired_test\x18\x01 \x01(\x0b\x32\x14.google.protobuf.AnyB\x08\xfa\x42\x05\xa2\x01\x02\x08\x01\x12\x84\x01\n\x01x\x18\x02 \x01(\x0b\x32\x14.google.protobuf.AnyBc\xfa\x42`\xa2\x01]\x1a,type.googleapis.com/google.protobuf.Duration\x1a-type.googleapis.com/google.protobuf.Timestamp\"\x87\x03\n\x0c\x44urationTest\x12:\n\rrequired_test\x18\x01 \x01(\x0b\x32\x19.google.protobuf.DurationB\x08\xfa\x42\x05\xaa\x01\x02\x08\x01\x12?\n\nconst_test\x18\x02 \x01(\x0b\x32\x19.google.protobuf.DurationB\x10\xfa\x42\r\xaa\x01\n\x12\x08\x08\x01\x10\x80\xca\xb5\xee\x01\x12=\n\nrange_test\x18\x03 \x01(\x0b\x32\x19.google.protobuf.DurationB\x0e\xfa\x42\x0b\xaa\x01\x08\x1a\x02\x08\n*\x02\x08\x05\x12?\n\x0crange_e_test\x18\x04 \x01(\x0b\x32\x19.google.protobuf.DurationB\x0e\xfa\x42\x0b\xaa\x01\x08\"\x02\x08\n2\x02\x08\x05\x12:\n\x07in_test\x18\x05 \x01(\x0b\x32\x19.google.protobuf.DurationB\x0e\xfa\x42\x0b\xaa\x01\x08:\x02\x08\x01:\x02\x08\x03\x12>\n\x0bnot_in_test\x18\x06 \x01(\x0b\x32\x19.google.protobuf.DurationB\x0e\xfa\x42\x0b\xaa\x01\x08:\x02\x08\x01:\x02\x08\x03\"\x9c\x04\n\rTimestampTest\x12;\n\rrequired_test\x18\x01 \x01(\x0b\x32\x1a.google.protobuf.TimestampB\x08\xfa\x42\x05\xb2\x01\x02\x08\x01\x12>\n\nconst_test\x18\x02 \x01(\x0b\x32\x1a.google.protobuf.TimestampB\x0e\xfa\x42\x0b\xb2\x01\x08\x12\x06\x08\x80\xa0\xf8\xfa\x05\x12\x46\n\nrange_test\x18\x03 \x01(\x0b\x32\x1a.google.protobuf.TimestampB\x16\xfa\x42\x13\xb2\x01\x10\x1a\x06\x08\x8a\xa0\xf8\xfa\x05*\x06\x08\x80\xa0\xf8\xfa\x05\x12H\n\x0crange_e_test\x18\x04 \x01(\x0b\x32\x1a.google.protobuf.TimestampB\x16\xfa\x42\x13\xb2\x01\x10\"\x06\x08\x8a\xa0\xf8\xfa\x05\x32\x06\x08\x80\xa0\xf8\xfa\x05\x12\x39\n\x0blt_now_test\x18\x05 \x01(\x0b\x32\x1a.google.protobuf.TimestampB\x08\xfa\x42\x05\xb2\x01\x02\x38\x01\x12\x39\n\x0bgt_now_test\x18\x06 \x01(\x0b\x32\x1a.google.protobuf.TimestampB\x08\xfa\x42\x05\xb2\x01\x02@\x01\x12;\n\x0bwithin_test\x18\x07 \x01(\x0b\x32\x1a.google.protobuf.TimestampB\n\xfa\x42\x07\xb2\x01\x04J\x02\x08\x01\x12I\n\x16within_and_gt_now_test\x18\x08 \x01(\x0b\x32\x1a.google.protobuf.TimestampB\r\xfa\x42\n\xb2\x01\x07@\x01J\x03\x08\x90\x1c\"\x86\x01\n\x13MessageDisabledTest\x12\x1e\n\nconst_test\x18\x01 \x01(\x11\x42\n\xfa\x42\x07\n\x05\r\x00\x00\x80?\x12%\n\x0crange_e_test\x18\x02 \x01(\x11\x42\x0f\xfa\x42\x0c\n\n\x1d\x00\x00 A-\x00\x00\x80?\x12#\n\nrange_test\x18\x03 \x01(\x11\x42\x0f\xfa\x42\x0c\n\n\x15\x00\x00 A%\x00\x00\x80?:\x03\xf8\x42\x01\"\x85\x01\n\x12MessageIgnoredTest\x12\x1e\n\nconst_test\x18\x01 \x01(\x11\x42\n\xfa\x42\x07\n\x05\r\x00\x00\x80?\x12%\n\x0crange_e_test\x18\x02 \x01(\x11\x42\x0f\xfa\x42\x0c\n\n\x1d\x00\x00 A-\x00\x00\x80?\x12#\n\nrange_test\x18\x03 \x01(\x11\x42\x0f\xfa\x42\x0c\n\n\x15\x00\x00 A%\x00\x00\x80?:\x03\x80\x43\x01*.\n\x05State\x12\x0c\n\x08INACTIVE\x10\x00\x12\x0b\n\x07PENDING\x10\x01\x12\n\n\x06\x41\x43TIVE\x10\x02\x62\x06proto3')

_STATE = DESCRIPTOR.enum_types_by_name['State']
State = enum_type_wrapper.EnumTypeWrapper(_STATE)
INACTIVE = 0
PENDING = 1
ACTIVE = 2


_FLOATTEST = DESCRIPTOR.message_types_by_name['FloatTest']
_DOUBLETEST = DESCRIPTOR.message_types_by_name['DoubleTest']
_INT32TEST = DESCRIPTOR.message_types_by_name['Int32Test']
_UINT32TEST = DESCRIPTOR.message_types_by_name['Uint32Test']
_SINT32TEST = DESCRIPTOR.message_types_by_name['Sint32Test']
_INT64TEST = DESCRIPTOR.message_types_by_name['Int64Test']
_UINT64TEST = DESCRIPTOR.message_types_by_name['Uint64Test']
_SINT64TEST = DESCRIPTOR.message_types_by_name['Sint64Test']
_FIXED32TEST = DESCRIPTOR.message_types_by_name['Fixed32Test']
_SFIXED32TEST = DESCRIPTOR.message_types_by_name['Sfixed32Test']
_SFIXED64TEST = DESCRIPTOR.message_types_by_name['Sfixed64Test']
_BOOLTEST = DESCRIPTOR.message_types_by_name['BoolTest']
_STRINGTEST = DESCRIPTOR.message_types_by_name['StringTest']
_BYTESTEST = DESCRIPTOR.message_types_by_name['BytesTest']
_ENUMTEST = DESCRIPTOR.message_types_by_name['EnumTest']
_MAPTEST = DESCRIPTOR.message_types_by_name['MapTest']
_MAPTEST_PAIRTESTENTRY = _MAPTEST.nested_types_by_name['PairTestEntry']
_MAPTEST_NOPARSETESTENTRY = _MAPTEST.nested_types_by_name['NoParseTestEntry']
_MAPTEST_KEYSTESTENTRY = _MAPTEST.nested_types_by_name['KeysTestEntry']
_MAPTEST_VALUESTESTENTRY = _MAPTEST.nested_types_by_name['ValuesTestEntry']
_MAPTEST_IGNORETESTENTRY = _MAPTEST.nested_types_by_name['IgnoreTestEntry']
_MESSAGETEST = DESCRIPTOR.message_types_by_name['MessageTest']
_REPEATEDTEST = DESCRIPTOR.message_types_by_name['RepeatedTest']
_ANYTEST = DESCRIPTOR.message_types_by_name['AnyTest']
_DURATIONTEST = DESCRIPTOR.message_types_by_name['DurationTest']
_TIMESTAMPTEST = DESCRIPTOR.message_types_by_name['TimestampTest']
_MESSAGEDISABLEDTEST = DESCRIPTOR.message_types_by_name['MessageDisabledTest']
_MESSAGEIGNOREDTEST = DESCRIPTOR.message_types_by_name['MessageIgnoredTest']
FloatTest = _reflection.GeneratedProtocolMessageType('FloatTest', (_message.Message,), {
  'DESCRIPTOR' : _FLOATTEST,
  '__module__' : 'example_proto.validate.demo_pb2'
  # @@protoc_insertion_point(class_scope:validate_test.FloatTest)
  })
_sym_db.RegisterMessage(FloatTest)

DoubleTest = _reflection.GeneratedProtocolMessageType('DoubleTest', (_message.Message,), {
  'DESCRIPTOR' : _DOUBLETEST,
  '__module__' : 'example_proto.validate.demo_pb2'
  # @@protoc_insertion_point(class_scope:validate_test.DoubleTest)
  })
_sym_db.RegisterMessage(DoubleTest)

Int32Test = _reflection.GeneratedProtocolMessageType('Int32Test', (_message.Message,), {
  'DESCRIPTOR' : _INT32TEST,
  '__module__' : 'example_proto.validate.demo_pb2'
  # @@protoc_insertion_point(class_scope:validate_test.Int32Test)
  })
_sym_db.RegisterMessage(Int32Test)

Uint32Test = _reflection.GeneratedProtocolMessageType('Uint32Test', (_message.Message,), {
  'DESCRIPTOR' : _UINT32TEST,
  '__module__' : 'example_proto.validate.demo_pb2'
  # @@protoc_insertion_point(class_scope:validate_test.Uint32Test)
  })
_sym_db.RegisterMessage(Uint32Test)

Sint32Test = _reflection.GeneratedProtocolMessageType('Sint32Test', (_message.Message,), {
  'DESCRIPTOR' : _SINT32TEST,
  '__module__' : 'example_proto.validate.demo_pb2'
  # @@protoc_insertion_point(class_scope:validate_test.Sint32Test)
  })
_sym_db.RegisterMessage(Sint32Test)

Int64Test = _reflection.GeneratedProtocolMessageType('Int64Test', (_message.Message,), {
  'DESCRIPTOR' : _INT64TEST,
  '__module__' : 'example_proto.validate.demo_pb2'
  # @@protoc_insertion_point(class_scope:validate_test.Int64Test)
  })
_sym_db.RegisterMessage(Int64Test)

Uint64Test = _reflection.GeneratedProtocolMessageType('Uint64Test', (_message.Message,), {
  'DESCRIPTOR' : _UINT64TEST,
  '__module__' : 'example_proto.validate.demo_pb2'
  # @@protoc_insertion_point(class_scope:validate_test.Uint64Test)
  })
_sym_db.RegisterMessage(Uint64Test)

Sint64Test = _reflection.GeneratedProtocolMessageType('Sint64Test', (_message.Message,), {
  'DESCRIPTOR' : _SINT64TEST,
  '__module__' : 'example_proto.validate.demo_pb2'
  # @@protoc_insertion_point(class_scope:validate_test.Sint64Test)
  })
_sym_db.RegisterMessage(Sint64Test)

Fixed32Test = _reflection.GeneratedProtocolMessageType('Fixed32Test', (_message.Message,), {
  'DESCRIPTOR' : _FIXED32TEST,
  '__module__' : 'example_proto.validate.demo_pb2'
  # @@protoc_insertion_point(class_scope:validate_test.Fixed32Test)
  })
_sym_db.RegisterMessage(Fixed32Test)

Sfixed32Test = _reflection.GeneratedProtocolMessageType('Sfixed32Test', (_message.Message,), {
  'DESCRIPTOR' : _SFIXED32TEST,
  '__module__' : 'example_proto.validate.demo_pb2'
  # @@protoc_insertion_point(class_scope:validate_test.Sfixed32Test)
  })
_sym_db.RegisterMessage(Sfixed32Test)

Sfixed64Test = _reflection.GeneratedProtocolMessageType('Sfixed64Test', (_message.Message,), {
  'DESCRIPTOR' : _SFIXED64TEST,
  '__module__' : 'example_proto.validate.demo_pb2'
  # @@protoc_insertion_point(class_scope:validate_test.Sfixed64Test)
  })
_sym_db.RegisterMessage(Sfixed64Test)

BoolTest = _reflection.GeneratedProtocolMessageType('BoolTest', (_message.Message,), {
  'DESCRIPTOR' : _BOOLTEST,
  '__module__' : 'example_proto.validate.demo_pb2'
  # @@protoc_insertion_point(class_scope:validate_test.BoolTest)
  })
_sym_db.RegisterMessage(BoolTest)

StringTest = _reflection.GeneratedProtocolMessageType('StringTest', (_message.Message,), {
  'DESCRIPTOR' : _STRINGTEST,
  '__module__' : 'example_proto.validate.demo_pb2'
  # @@protoc_insertion_point(class_scope:validate_test.StringTest)
  })
_sym_db.RegisterMessage(StringTest)

BytesTest = _reflection.GeneratedProtocolMessageType('BytesTest', (_message.Message,), {
  'DESCRIPTOR' : _BYTESTEST,
  '__module__' : 'example_proto.validate.demo_pb2'
  # @@protoc_insertion_point(class_scope:validate_test.BytesTest)
  })
_sym_db.RegisterMessage(BytesTest)

EnumTest = _reflection.GeneratedProtocolMessageType('EnumTest', (_message.Message,), {
  'DESCRIPTOR' : _ENUMTEST,
  '__module__' : 'example_proto.validate.demo_pb2'
  # @@protoc_insertion_point(class_scope:validate_test.EnumTest)
  })
_sym_db.RegisterMessage(EnumTest)

MapTest = _reflection.GeneratedProtocolMessageType('MapTest', (_message.Message,), {

  'PairTestEntry' : _reflection.GeneratedProtocolMessageType('PairTestEntry', (_message.Message,), {
    'DESCRIPTOR' : _MAPTEST_PAIRTESTENTRY,
    '__module__' : 'example_proto.validate.demo_pb2'
    # @@protoc_insertion_point(class_scope:validate_test.MapTest.PairTestEntry)
    })
  ,

  'NoParseTestEntry' : _reflection.GeneratedProtocolMessageType('NoParseTestEntry', (_message.Message,), {
    'DESCRIPTOR' : _MAPTEST_NOPARSETESTENTRY,
    '__module__' : 'example_proto.validate.demo_pb2'
    # @@protoc_insertion_point(class_scope:validate_test.MapTest.NoParseTestEntry)
    })
  ,

  'KeysTestEntry' : _reflection.GeneratedProtocolMessageType('KeysTestEntry', (_message.Message,), {
    'DESCRIPTOR' : _MAPTEST_KEYSTESTENTRY,
    '__module__' : 'example_proto.validate.demo_pb2'
    # @@protoc_insertion_point(class_scope:validate_test.MapTest.KeysTestEntry)
    })
  ,

  'ValuesTestEntry' : _reflection.GeneratedProtocolMessageType('ValuesTestEntry', (_message.Message,), {
    'DESCRIPTOR' : _MAPTEST_VALUESTESTENTRY,
    '__module__' : 'example_proto.validate.demo_pb2'
    # @@protoc_insertion_point(class_scope:validate_test.MapTest.ValuesTestEntry)
    })
  ,

  'IgnoreTestEntry' : _reflection.GeneratedProtocolMessageType('IgnoreTestEntry', (_message.Message,), {
    'DESCRIPTOR' : _MAPTEST_IGNORETESTENTRY,
    '__module__' : 'example_proto.validate.demo_pb2'
    # @@protoc_insertion_point(class_scope:validate_test.MapTest.IgnoreTestEntry)
    })
  ,
  'DESCRIPTOR' : _MAPTEST,
  '__module__' : 'example_proto.validate.demo_pb2'
  # @@protoc_insertion_point(class_scope:validate_test.MapTest)
  })
_sym_db.RegisterMessage(MapTest)
_sym_db.RegisterMessage(MapTest.PairTestEntry)
_sym_db.RegisterMessage(MapTest.NoParseTestEntry)
_sym_db.RegisterMessage(MapTest.KeysTestEntry)
_sym_db.RegisterMessage(MapTest.ValuesTestEntry)
_sym_db.RegisterMessage(MapTest.IgnoreTestEntry)

MessageTest = _reflection.GeneratedProtocolMessageType('MessageTest', (_message.Message,), {
  'DESCRIPTOR' : _MESSAGETEST,
  '__module__' : 'example_proto.validate.demo_pb2'
  # @@protoc_insertion_point(class_scope:validate_test.MessageTest)
  })
_sym_db.RegisterMessage(MessageTest)

RepeatedTest = _reflection.GeneratedProtocolMessageType('RepeatedTest', (_message.Message,), {
  'DESCRIPTOR' : _REPEATEDTEST,
  '__module__' : 'example_proto.validate.demo_pb2'
  # @@protoc_insertion_point(class_scope:validate_test.RepeatedTest)
  })
_sym_db.RegisterMessage(RepeatedTest)

AnyTest = _reflection.GeneratedProtocolMessageType('AnyTest', (_message.Message,), {
  'DESCRIPTOR' : _ANYTEST,
  '__module__' : 'example_proto.validate.demo_pb2'
  # @@protoc_insertion_point(class_scope:validate_test.AnyTest)
  })
_sym_db.RegisterMessage(AnyTest)

DurationTest = _reflection.GeneratedProtocolMessageType('DurationTest', (_message.Message,), {
  'DESCRIPTOR' : _DURATIONTEST,
  '__module__' : 'example_proto.validate.demo_pb2'
  # @@protoc_insertion_point(class_scope:validate_test.DurationTest)
  })
_sym_db.RegisterMessage(DurationTest)

TimestampTest = _reflection.GeneratedProtocolMessageType('TimestampTest', (_message.Message,), {
  'DESCRIPTOR' : _TIMESTAMPTEST,
  '__module__' : 'example_proto.validate.demo_pb2'
  # @@protoc_insertion_point(class_scope:validate_test.TimestampTest)
  })
_sym_db.RegisterMessage(TimestampTest)

MessageDisabledTest = _reflection.GeneratedProtocolMessageType('MessageDisabledTest', (_message.Message,), {
  'DESCRIPTOR' : _MESSAGEDISABLEDTEST,
  '__module__' : 'example_proto.validate.demo_pb2'
  # @@protoc_insertion_point(class_scope:validate_test.MessageDisabledTest)
  })
_sym_db.RegisterMessage(MessageDisabledTest)

MessageIgnoredTest = _reflection.GeneratedProtocolMessageType('MessageIgnoredTest', (_message.Message,), {
  'DESCRIPTOR' : _MESSAGEIGNOREDTEST,
  '__module__' : 'example_proto.validate.demo_pb2'
  # @@protoc_insertion_point(class_scope:validate_test.MessageIgnoredTest)
  })
_sym_db.RegisterMessage(MessageIgnoredTest)

if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  _FLOATTEST.fields_by_name['const_test']._options = None
  _FLOATTEST.fields_by_name['const_test']._serialized_options = b'\372B\007\n\005\r\000\000\200?'
  _FLOATTEST.fields_by_name['range_e_test']._options = None
  _FLOATTEST.fields_by_name['range_e_test']._serialized_options = b'\372B\014\n\n\035\000\000 A-\000\000\200?'
  _FLOATTEST.fields_by_name['range_test']._options = None
  _FLOATTEST.fields_by_name['range_test']._serialized_options = b'\372B\014\n\n\025\000\000 A%\000\000\200?'
  _FLOATTEST.fields_by_name['in_test']._options = None
  _FLOATTEST.fields_by_name['in_test']._serialized_options = b'\372B\021\n\0175\000\000\200?5\000\000\000@5\000\000@@'
  _FLOATTEST.fields_by_name['not_in_test']._options = None
  _FLOATTEST.fields_by_name['not_in_test']._serialized_options = b'\372B\021\n\017=\000\000\200?=\000\000\000@=\000\000@@'
  _FLOATTEST.fields_by_name['ignore_test']._options = None
  _FLOATTEST.fields_by_name['ignore_test']._serialized_options = b'\372B\004\n\002@\001'
  _DOUBLETEST.fields_by_name['const_test']._options = None
  _DOUBLETEST.fields_by_name['const_test']._serialized_options = b'\372B\013\022\t\t\000\000\000\000\000\000\360?'
  _DOUBLETEST.fields_by_name['range_e_test']._options = None
  _DOUBLETEST.fields_by_name['range_e_test']._serialized_options = b'\372B\024\022\022\031\000\000\000\000\000\000$@)\000\000\000\000\000\000\360?'
  _DOUBLETEST.fields_by_name['range_test']._options = None
  _DOUBLETEST.fields_by_name['range_test']._serialized_options = b'\372B\024\022\022\021\000\000\000\000\000\000$@!\000\000\000\000\000\000\360?'
  _DOUBLETEST.fields_by_name['in_test']._options = None
  _DOUBLETEST.fields_by_name['in_test']._serialized_options = b'\372B\035\022\0331\000\000\000\000\000\000\360?1\000\000\000\000\000\000\000@1\000\000\000\000\000\000\010@'
  _DOUBLETEST.fields_by_name['not_in_test']._options = None
  _DOUBLETEST.fields_by_name['not_in_test']._serialized_options = b'\372B\035\022\0331\000\000\000\000\000\000\360?1\000\000\000\000\000\000\000@1\000\000\000\000\000\000\010@'
  _DOUBLETEST.fields_by_name['ignore_test']._options = None
  _DOUBLETEST.fields_by_name['ignore_test']._serialized_options = b'\372B\004\022\002@\001'
  _INT32TEST.fields_by_name['const_test']._options = None
  _INT32TEST.fields_by_name['const_test']._serialized_options = b'\372B\004\032\002\010\001'
  _INT32TEST.fields_by_name['range_e_test']._options = None
  _INT32TEST.fields_by_name['range_e_test']._serialized_options = b'\372B\006\032\004\030\n(\001'
  _INT32TEST.fields_by_name['range_test']._options = None
  _INT32TEST.fields_by_name['range_test']._serialized_options = b'\372B\006\032\004\020\n \001'
  _INT32TEST.fields_by_name['in_test']._options = None
  _INT32TEST.fields_by_name['in_test']._serialized_options = b'\372B\010\032\0060\0010\0020\003'
  _INT32TEST.fields_by_name['not_in_test']._options = None
  _INT32TEST.fields_by_name['not_in_test']._serialized_options = b'\372B\010\032\0060\0010\0020\003'
  _INT32TEST.fields_by_name['ignore_test']._options = None
  _INT32TEST.fields_by_name['ignore_test']._serialized_options = b'\372B\004\032\002@\001'
  _UINT32TEST.fields_by_name['const_test']._options = None
  _UINT32TEST.fields_by_name['const_test']._serialized_options = b'\372B\004*\002\010\001'
  _UINT32TEST.fields_by_name['range_e_test']._options = None
  _UINT32TEST.fields_by_name['range_e_test']._serialized_options = b'\372B\006*\004\030\n(\001'
  _UINT32TEST.fields_by_name['range_test']._options = None
  _UINT32TEST.fields_by_name['range_test']._serialized_options = b'\372B\006*\004\020\n \001'
  _UINT32TEST.fields_by_name['in_test']._options = None
  _UINT32TEST.fields_by_name['in_test']._serialized_options = b'\372B\010*\0060\0010\0020\003'
  _UINT32TEST.fields_by_name['not_in_test']._options = None
  _UINT32TEST.fields_by_name['not_in_test']._serialized_options = b'\372B\010*\0060\0010\0020\003'
  _UINT32TEST.fields_by_name['ignore_test']._options = None
  _UINT32TEST.fields_by_name['ignore_test']._serialized_options = b'\372B\004*\002@\001'
  _SINT32TEST.fields_by_name['const_test']._options = None
  _SINT32TEST.fields_by_name['const_test']._serialized_options = b'\372B\004:\002\010\002'
  _SINT32TEST.fields_by_name['range_e_test']._options = None
  _SINT32TEST.fields_by_name['range_e_test']._serialized_options = b'\372B\006:\004\030\024(\002'
  _SINT32TEST.fields_by_name['range_test']._options = None
  _SINT32TEST.fields_by_name['range_test']._serialized_options = b'\372B\006:\004\020\024 \002'
  _SINT32TEST.fields_by_name['in_test']._options = None
  _SINT32TEST.fields_by_name['in_test']._serialized_options = b'\372B\010:\0060\0020\0040\006'
  _SINT32TEST.fields_by_name['not_in_test']._options = None
  _SINT32TEST.fields_by_name['not_in_test']._serialized_options = b'\372B\010:\0060\0020\0040\006'
  _SINT32TEST.fields_by_name['ignore_test']._options = None
  _SINT32TEST.fields_by_name['ignore_test']._serialized_options = b'\372B\004:\002@\001'
  _INT64TEST.fields_by_name['const_test']._options = None
  _INT64TEST.fields_by_name['const_test']._serialized_options = b'\372B\004\"\002\010\001'
  _INT64TEST.fields_by_name['range_e_test']._options = None
  _INT64TEST.fields_by_name['range_e_test']._serialized_options = b'\372B\006\"\004\030\n(\001'
  _INT64TEST.fields_by_name['range_test']._options = None
  _INT64TEST.fields_by_name['range_test']._serialized_options = b'\372B\006\"\004\020\n \001'
  _INT64TEST.fields_by_name['in_test']._options = None
  _INT64TEST.fields_by_name['in_test']._serialized_options = b'\372B\010\"\0060\0010\0020\003'
  _INT64TEST.fields_by_name['not_in_test']._options = None
  _INT64TEST.fields_by_name['not_in_test']._serialized_options = b'\372B\010\"\0060\0010\0020\003'
  _INT64TEST.fields_by_name['ignore_test']._options = None
  _INT64TEST.fields_by_name['ignore_test']._serialized_options = b'\372B\004\"\002@\001'
  _UINT64TEST.fields_by_name['const_test']._options = None
  _UINT64TEST.fields_by_name['const_test']._serialized_options = b'\372B\0042\002\010\001'
  _UINT64TEST.fields_by_name['range_e_test']._options = None
  _UINT64TEST.fields_by_name['range_e_test']._serialized_options = b'\372B\0062\004\030\n(\001'
  _UINT64TEST.fields_by_name['range_test']._options = None
  _UINT64TEST.fields_by_name['range_test']._serialized_options = b'\372B\0062\004\020\n \001'
  _UINT64TEST.fields_by_name['in_test']._options = None
  _UINT64TEST.fields_by_name['in_test']._serialized_options = b'\372B\0102\0060\0010\0020\003'
  _UINT64TEST.fields_by_name['not_in_test']._options = None
  _UINT64TEST.fields_by_name['not_in_test']._serialized_options = b'\372B\0102\0060\0010\0020\003'
  _UINT64TEST.fields_by_name['ignore_test']._options = None
  _UINT64TEST.fields_by_name['ignore_test']._serialized_options = b'\372B\0042\002@\001'
  _SINT64TEST.fields_by_name['const_test']._options = None
  _SINT64TEST.fields_by_name['const_test']._serialized_options = b'\372B\004B\002\010\002'
  _SINT64TEST.fields_by_name['range_e_test']._options = None
  _SINT64TEST.fields_by_name['range_e_test']._serialized_options = b'\372B\006B\004\030\024(\002'
  _SINT64TEST.fields_by_name['range_test']._options = None
  _SINT64TEST.fields_by_name['range_test']._serialized_options = b'\372B\006B\004\020\024 \002'
  _SINT64TEST.fields_by_name['in_test']._options = None
  _SINT64TEST.fields_by_name['in_test']._serialized_options = b'\372B\010B\0060\0020\0040\006'
  _SINT64TEST.fields_by_name['not_in_test']._options = None
  _SINT64TEST.fields_by_name['not_in_test']._serialized_options = b'\372B\010B\0060\0020\0040\006'
  _SINT64TEST.fields_by_name['ignore_test']._options = None
  _SINT64TEST.fields_by_name['ignore_test']._serialized_options = b'\372B\004B\002@\001'
  _FIXED32TEST.fields_by_name['const_test']._options = None
  _FIXED32TEST.fields_by_name['const_test']._serialized_options = b'\372B\007J\005\r\001\000\000\000'
  _FIXED32TEST.fields_by_name['range_e_test']._options = None
  _FIXED32TEST.fields_by_name['range_e_test']._serialized_options = b'\372B\014J\n\035\n\000\000\000-\001\000\000\000'
  _FIXED32TEST.fields_by_name['range_test']._options = None
  _FIXED32TEST.fields_by_name['range_test']._serialized_options = b'\372B\014J\n\025\n\000\000\000%\001\000\000\000'
  _FIXED32TEST.fields_by_name['in_test']._options = None
  _FIXED32TEST.fields_by_name['in_test']._serialized_options = b'\372B\021J\0175\001\000\000\0005\002\000\000\0005\003\000\000\000'
  _FIXED32TEST.fields_by_name['not_in_test']._options = None
  _FIXED32TEST.fields_by_name['not_in_test']._serialized_options = b'\372B\021J\0175\001\000\000\0005\002\000\000\0005\003\000\000\000'
  _FIXED32TEST.fields_by_name['ignore_test']._options = None
  _FIXED32TEST.fields_by_name['ignore_test']._serialized_options = b'\372B\004J\002@\001'
  _SFIXED32TEST.fields_by_name['const_test']._options = None
  _SFIXED32TEST.fields_by_name['const_test']._serialized_options = b'\372B\007Z\005\r\001\000\000\000'
  _SFIXED32TEST.fields_by_name['range_e_test']._options = None
  _SFIXED32TEST.fields_by_name['range_e_test']._serialized_options = b'\372B\014Z\n\035\n\000\000\000-\001\000\000\000'
  _SFIXED32TEST.fields_by_name['range_test']._options = None
  _SFIXED32TEST.fields_by_name['range_test']._serialized_options = b'\372B\014Z\n\025\n\000\000\000%\001\000\000\000'
  _SFIXED32TEST.fields_by_name['in_test']._options = None
  _SFIXED32TEST.fields_by_name['in_test']._serialized_options = b'\372B\021Z\0175\001\000\000\0005\002\000\000\0005\003\000\000\000'
  _SFIXED32TEST.fields_by_name['not_in_test']._options = None
  _SFIXED32TEST.fields_by_name['not_in_test']._serialized_options = b'\372B\021Z\0175\001\000\000\0005\002\000\000\0005\003\000\000\000'
  _SFIXED32TEST.fields_by_name['ignore_test']._options = None
  _SFIXED32TEST.fields_by_name['ignore_test']._serialized_options = b'\372B\004Z\002@\001'
  _SFIXED64TEST.fields_by_name['const_test']._options = None
  _SFIXED64TEST.fields_by_name['const_test']._serialized_options = b'\372B\013b\t\t\001\000\000\000\000\000\000\000'
  _SFIXED64TEST.fields_by_name['range_e_test']._options = None
  _SFIXED64TEST.fields_by_name['range_e_test']._serialized_options = b'\372B\024b\022\031\n\000\000\000\000\000\000\000)\001\000\000\000\000\000\000\000'
  _SFIXED64TEST.fields_by_name['range_test']._options = None
  _SFIXED64TEST.fields_by_name['range_test']._serialized_options = b'\372B\024b\022\021\n\000\000\000\000\000\000\000!\001\000\000\000\000\000\000\000'
  _SFIXED64TEST.fields_by_name['in_test']._options = None
  _SFIXED64TEST.fields_by_name['in_test']._serialized_options = b'\372B\035b\0331\001\000\000\000\000\000\000\0001\002\000\000\000\000\000\000\0001\003\000\000\000\000\000\000\000'
  _SFIXED64TEST.fields_by_name['not_in_test']._options = None
  _SFIXED64TEST.fields_by_name['not_in_test']._serialized_options = b'\372B\035b\0331\001\000\000\000\000\000\000\0001\002\000\000\000\000\000\000\0001\003\000\000\000\000\000\000\000'
  _SFIXED64TEST.fields_by_name['ignore_test']._options = None
  _SFIXED64TEST.fields_by_name['ignore_test']._serialized_options = b'\372B\004b\002@\001'
  _BOOLTEST.fields_by_name['bool_1_test']._options = None
  _BOOLTEST.fields_by_name['bool_1_test']._serialized_options = b'\372B\004j\002\010\001'
  _BOOLTEST.fields_by_name['bool_2_test']._options = None
  _BOOLTEST.fields_by_name['bool_2_test']._serialized_options = b'\372B\004j\002\010\000'
  _STRINGTEST.fields_by_name['const_test']._options = None
  _STRINGTEST.fields_by_name['const_test']._serialized_options = b'\372B\007r\005\n\003aaa'
  _STRINGTEST.fields_by_name['len_test']._options = None
  _STRINGTEST.fields_by_name['len_test']._serialized_options = b'\372B\005r\003\230\001\003'
  _STRINGTEST.fields_by_name['s_range_len_test']._options = None
  _STRINGTEST.fields_by_name['s_range_len_test']._serialized_options = b'\372B\006r\004\020\001\030\003'
  _STRINGTEST.fields_by_name['b_range_len_test']._options = None
  _STRINGTEST.fields_by_name['b_range_len_test']._serialized_options = b'\372B\006r\004 \001(\003'
  _STRINGTEST.fields_by_name['pattern_test']._options = None
  _STRINGTEST.fields_by_name['pattern_test']._serialized_options = b'\372B\tr\0072\005^test'
  _STRINGTEST.fields_by_name['prefix_test']._options = None
  _STRINGTEST.fields_by_name['prefix_test']._serialized_options = b'\372B\nr\010:\006prefix'
  _STRINGTEST.fields_by_name['suffix_test']._options = None
  _STRINGTEST.fields_by_name['suffix_test']._serialized_options = b'\372B\nr\010B\006suffix'
  _STRINGTEST.fields_by_name['contains_test']._options = None
  _STRINGTEST.fields_by_name['contains_test']._serialized_options = b'\372B\014r\nJ\010contains'
  _STRINGTEST.fields_by_name['not_contains_test']._options = None
  _STRINGTEST.fields_by_name['not_contains_test']._serialized_options = b'\372B\021r\017\272\001\014not_contains'
  _STRINGTEST.fields_by_name['in_test']._options = None
  _STRINGTEST.fields_by_name['in_test']._serialized_options = b'\372B\013r\tR\001aR\001bR\001c'
  _STRINGTEST.fields_by_name['not_in_test']._options = None
  _STRINGTEST.fields_by_name['not_in_test']._serialized_options = b'\372B\013r\tZ\001aZ\001bZ\001c'
  _STRINGTEST.fields_by_name['email_test']._options = None
  _STRINGTEST.fields_by_name['email_test']._serialized_options = b'\372B\004r\002`\001'
  _STRINGTEST.fields_by_name['hostname_test']._options = None
  _STRINGTEST.fields_by_name['hostname_test']._serialized_options = b'\372B\004r\002h\001'
  _STRINGTEST.fields_by_name['ip_test']._options = None
  _STRINGTEST.fields_by_name['ip_test']._serialized_options = b'\372B\004r\002p\001'
  _STRINGTEST.fields_by_name['ipv4_test']._options = None
  _STRINGTEST.fields_by_name['ipv4_test']._serialized_options = b'\372B\004r\002x\001'
  _STRINGTEST.fields_by_name['ipv6_test']._options = None
  _STRINGTEST.fields_by_name['ipv6_test']._serialized_options = b'\372B\005r\003\200\001\001'
  _STRINGTEST.fields_by_name['uri_test']._options = None
  _STRINGTEST.fields_by_name['uri_test']._serialized_options = b'\372B\005r\003\210\001\001'
  _STRINGTEST.fields_by_name['uri_ref_test']._options = None
  _STRINGTEST.fields_by_name['uri_ref_test']._serialized_options = b'\372B\005r\003\220\001\001'
  _STRINGTEST.fields_by_name['address_test']._options = None
  _STRINGTEST.fields_by_name['address_test']._serialized_options = b'\372B\005r\003\250\001\001'
  _STRINGTEST.fields_by_name['uuid_test']._options = None
  _STRINGTEST.fields_by_name['uuid_test']._serialized_options = b'\372B\005r\003\260\001\001'
  _STRINGTEST.fields_by_name['ignore_test']._options = None
  _STRINGTEST.fields_by_name['ignore_test']._serialized_options = b'\372B\005r\003\320\001\001'
  _BYTESTEST.fields_by_name['const_test']._options = None
  _BYTESTEST.fields_by_name['const_test']._serialized_options = b'\372B\010z\006\n\004demo'
  _BYTESTEST.fields_by_name['len_test']._options = None
  _BYTESTEST.fields_by_name['len_test']._serialized_options = b'\372B\004z\002h\004'
  _BYTESTEST.fields_by_name['range_len_test']._options = None
  _BYTESTEST.fields_by_name['range_len_test']._serialized_options = b'\372B\006z\004\020\001\030\004'
  _BYTESTEST.fields_by_name['pattern_test']._options = None
  _BYTESTEST.fields_by_name['pattern_test']._serialized_options = b'\372B\tz\007\"\005^test'
  _BYTESTEST.fields_by_name['prefix_test']._options = None
  _BYTESTEST.fields_by_name['prefix_test']._serialized_options = b'\372B\nz\010*\006prefix'
  _BYTESTEST.fields_by_name['suffix_test']._options = None
  _BYTESTEST.fields_by_name['suffix_test']._serialized_options = b'\372B\nz\0102\006suffix'
  _BYTESTEST.fields_by_name['contains_test']._options = None
  _BYTESTEST.fields_by_name['contains_test']._serialized_options = b'\372B\014z\n:\010contains'
  _BYTESTEST.fields_by_name['in_test']._options = None
  _BYTESTEST.fields_by_name['in_test']._serialized_options = b'\372B\013z\tB\001aB\001bB\001c'
  _BYTESTEST.fields_by_name['not_in_test']._options = None
  _BYTESTEST.fields_by_name['not_in_test']._serialized_options = b'\372B\013z\tJ\001aJ\001bJ\001c'
  _ENUMTEST.fields_by_name['const_test']._options = None
  _ENUMTEST.fields_by_name['const_test']._serialized_options = b'\372B\005\202\001\002\010\002'
  _ENUMTEST.fields_by_name['defined_only_test']._options = None
  _ENUMTEST.fields_by_name['defined_only_test']._serialized_options = b'\372B\005\202\001\002\020\001'
  _ENUMTEST.fields_by_name['in_test']._options = None
  _ENUMTEST.fields_by_name['in_test']._serialized_options = b'\372B\007\202\001\004\030\000\030\002'
  _ENUMTEST.fields_by_name['not_in_test']._options = None
  _ENUMTEST.fields_by_name['not_in_test']._serialized_options = b'\372B\007\202\001\004\030\000\030\002'
  _MAPTEST_PAIRTESTENTRY._options = None
  _MAPTEST_PAIRTESTENTRY._serialized_options = b'8\001'
  _MAPTEST_NOPARSETESTENTRY._options = None
  _MAPTEST_NOPARSETESTENTRY._serialized_options = b'8\001'
  _MAPTEST_KEYSTESTENTRY._options = None
  _MAPTEST_KEYSTESTENTRY._serialized_options = b'8\001'
  _MAPTEST_VALUESTESTENTRY._options = None
  _MAPTEST_VALUESTESTENTRY._serialized_options = b'8\001'
  _MAPTEST_IGNORETESTENTRY._options = None
  _MAPTEST_IGNORETESTENTRY._serialized_options = b'8\001'
  _MAPTEST.fields_by_name['pair_test']._options = None
  _MAPTEST.fields_by_name['pair_test']._serialized_options = b'\372B\007\232\001\004\010\001\020\005'
  _MAPTEST.fields_by_name['no_parse_test']._options = None
  _MAPTEST.fields_by_name['no_parse_test']._serialized_options = b'\372B\005\232\001\002\030\001'
  _MAPTEST.fields_by_name['keys_test']._options = None
  _MAPTEST.fields_by_name['keys_test']._serialized_options = b'\372B\t\232\001\006\"\004r\002\020\000'
  _MAPTEST.fields_by_name['values_test']._options = None
  _MAPTEST.fields_by_name['values_test']._serialized_options = b'\372B\t\232\001\006*\004\032\002\020\000'
  _MAPTEST.fields_by_name['ignore_test']._options = None
  _MAPTEST.fields_by_name['ignore_test']._serialized_options = b'\372B\005\232\001\0020\001'
  _MESSAGETEST.fields_by_name['skip_test']._options = None
  _MESSAGETEST.fields_by_name['skip_test']._serialized_options = b'\372B\005\212\001\002\010\001'
  _MESSAGETEST.fields_by_name['required_test']._options = None
  _MESSAGETEST.fields_by_name['required_test']._serialized_options = b'\372B\005\212\001\002\020\001'
  _REPEATEDTEST.fields_by_name['range_test']._options = None
  _REPEATEDTEST.fields_by_name['range_test']._serialized_options = b'\372B\007\222\001\004\010\001\020\005'
  _REPEATEDTEST.fields_by_name['unique_test']._options = None
  _REPEATEDTEST.fields_by_name['unique_test']._serialized_options = b'\372B\005\222\001\002\030\001'
  _REPEATEDTEST.fields_by_name['items_test']._options = None
  _REPEATEDTEST.fields_by_name['items_test']._serialized_options = b'\372B\013\222\001\010\"\006r\004\020\001\030\005'
  _REPEATEDTEST.fields_by_name['ignore_test']._options = None
  _REPEATEDTEST.fields_by_name['ignore_test']._serialized_options = b'\372B\005\222\001\002(\001'
  _ANYTEST.fields_by_name['required_test']._options = None
  _ANYTEST.fields_by_name['required_test']._serialized_options = b'\372B\005\242\001\002\010\001'
  _ANYTEST.fields_by_name['x']._options = None
  _ANYTEST.fields_by_name['x']._serialized_options = b'\372B`\242\001]\032,type.googleapis.com/google.protobuf.Duration\032-type.googleapis.com/google.protobuf.Timestamp'
  _DURATIONTEST.fields_by_name['required_test']._options = None
  _DURATIONTEST.fields_by_name['required_test']._serialized_options = b'\372B\005\252\001\002\010\001'
  _DURATIONTEST.fields_by_name['const_test']._options = None
  _DURATIONTEST.fields_by_name['const_test']._serialized_options = b'\372B\r\252\001\n\022\010\010\001\020\200\312\265\356\001'
  _DURATIONTEST.fields_by_name['range_test']._options = None
  _DURATIONTEST.fields_by_name['range_test']._serialized_options = b'\372B\013\252\001\010\032\002\010\n*\002\010\005'
  _DURATIONTEST.fields_by_name['range_e_test']._options = None
  _DURATIONTEST.fields_by_name['range_e_test']._serialized_options = b'\372B\013\252\001\010\"\002\010\n2\002\010\005'
  _DURATIONTEST.fields_by_name['in_test']._options = None
  _DURATIONTEST.fields_by_name['in_test']._serialized_options = b'\372B\013\252\001\010:\002\010\001:\002\010\003'
  _DURATIONTEST.fields_by_name['not_in_test']._options = None
  _DURATIONTEST.fields_by_name['not_in_test']._serialized_options = b'\372B\013\252\001\010:\002\010\001:\002\010\003'
  _TIMESTAMPTEST.fields_by_name['required_test']._options = None
  _TIMESTAMPTEST.fields_by_name['required_test']._serialized_options = b'\372B\005\262\001\002\010\001'
  _TIMESTAMPTEST.fields_by_name['const_test']._options = None
  _TIMESTAMPTEST.fields_by_name['const_test']._serialized_options = b'\372B\013\262\001\010\022\006\010\200\240\370\372\005'
  _TIMESTAMPTEST.fields_by_name['range_test']._options = None
  _TIMESTAMPTEST.fields_by_name['range_test']._serialized_options = b'\372B\023\262\001\020\032\006\010\212\240\370\372\005*\006\010\200\240\370\372\005'
  _TIMESTAMPTEST.fields_by_name['range_e_test']._options = None
  _TIMESTAMPTEST.fields_by_name['range_e_test']._serialized_options = b'\372B\023\262\001\020\"\006\010\212\240\370\372\0052\006\010\200\240\370\372\005'
  _TIMESTAMPTEST.fields_by_name['lt_now_test']._options = None
  _TIMESTAMPTEST.fields_by_name['lt_now_test']._serialized_options = b'\372B\005\262\001\0028\001'
  _TIMESTAMPTEST.fields_by_name['gt_now_test']._options = None
  _TIMESTAMPTEST.fields_by_name['gt_now_test']._serialized_options = b'\372B\005\262\001\002@\001'
  _TIMESTAMPTEST.fields_by_name['within_test']._options = None
  _TIMESTAMPTEST.fields_by_name['within_test']._serialized_options = b'\372B\007\262\001\004J\002\010\001'
  _TIMESTAMPTEST.fields_by_name['within_and_gt_now_test']._options = None
  _TIMESTAMPTEST.fields_by_name['within_and_gt_now_test']._serialized_options = b'\372B\n\262\001\007@\001J\003\010\220\034'
  _MESSAGEDISABLEDTEST.fields_by_name['const_test']._options = None
  _MESSAGEDISABLEDTEST.fields_by_name['const_test']._serialized_options = b'\372B\007\n\005\r\000\000\200?'
  _MESSAGEDISABLEDTEST.fields_by_name['range_e_test']._options = None
  _MESSAGEDISABLEDTEST.fields_by_name['range_e_test']._serialized_options = b'\372B\014\n\n\035\000\000 A-\000\000\200?'
  _MESSAGEDISABLEDTEST.fields_by_name['range_test']._options = None
  _MESSAGEDISABLEDTEST.fields_by_name['range_test']._serialized_options = b'\372B\014\n\n\025\000\000 A%\000\000\200?'
  _MESSAGEDISABLEDTEST._options = None
  _MESSAGEDISABLEDTEST._serialized_options = b'\370B\001'
  _MESSAGEIGNOREDTEST.fields_by_name['const_test']._options = None
  _MESSAGEIGNOREDTEST.fields_by_name['const_test']._serialized_options = b'\372B\007\n\005\r\000\000\200?'
  _MESSAGEIGNOREDTEST.fields_by_name['range_e_test']._options = None
  _MESSAGEIGNOREDTEST.fields_by_name['range_e_test']._serialized_options = b'\372B\014\n\n\035\000\000 A-\000\000\200?'
  _MESSAGEIGNOREDTEST.fields_by_name['range_test']._options = None
  _MESSAGEIGNOREDTEST.fields_by_name['range_test']._serialized_options = b'\372B\014\n\n\025\000\000 A%\000\000\200?'
  _MESSAGEIGNOREDTEST._options = None
  _MESSAGEIGNOREDTEST._serialized_options = b'\200C\001'
  _STATE._serialized_start=6259
  _STATE._serialized_end=6305
  _FLOATTEST._serialized_start=182
  _FLOATTEST._serialized_end=413
  _DOUBLETEST._serialized_start=416
  _DOUBLETEST._serialized_end=692
  _INT32TEST._serialized_start=695
  _INT32TEST._serialized_end=893
  _UINT32TEST._serialized_start=896
  _UINT32TEST._serialized_end=1095
  _SINT32TEST._serialized_start=1098
  _SINT32TEST._serialized_end=1297
  _INT64TEST._serialized_start=1300
  _INT64TEST._serialized_end=1498
  _UINT64TEST._serialized_start=1501
  _UINT64TEST._serialized_end=1700
  _SINT64TEST._serialized_start=1703
  _SINT64TEST._serialized_end=1902
  _FIXED32TEST._serialized_start=1905
  _FIXED32TEST._serialized_end=2138
  _SFIXED32TEST._serialized_start=2141
  _SFIXED32TEST._serialized_end=2375
  _SFIXED64TEST._serialized_start=2378
  _SFIXED64TEST._serialized_end=2656
  _BOOLTEST._serialized_start=2658
  _BOOLTEST._serialized_end=2728
  _STRINGTEST._serialized_start=2731
  _STRINGTEST._serialized_end=3440
  _BYTESTEST._serialized_start=3443
  _BYTESTEST._serialized_end=3767
  _ENUMTEST._serialized_start=3770
  _ENUMTEST._serialized_end=3997
  _MAPTEST._serialized_start=4000
  _MAPTEST._serialized_end=4621
  _MAPTEST_PAIRTESTENTRY._serialized_start=4371
  _MAPTEST_PAIRTESTENTRY._serialized_end=4418
  _MAPTEST_NOPARSETESTENTRY._serialized_start=4420
  _MAPTEST_NOPARSETESTENTRY._serialized_end=4470
  _MAPTEST_KEYSTESTENTRY._serialized_start=4472
  _MAPTEST_KEYSTESTENTRY._serialized_end=4519
  _MAPTEST_VALUESTESTENTRY._serialized_start=4521
  _MAPTEST_VALUESTESTENTRY._serialized_end=4570
  _MAPTEST_IGNORETESTENTRY._serialized_start=4572
  _MAPTEST_IGNORETESTENTRY._serialized_end=4621
  _MESSAGETEST._serialized_start=4623
  _MESSAGETEST._serialized_end=4698
  _REPEATEDTEST._serialized_start=4701
  _REPEATEDTEST._serialized_end=4845
  _ANYTEST._serialized_start=4848
  _ANYTEST._serialized_end=5047
  _DURATIONTEST._serialized_start=5050
  _DURATIONTEST._serialized_end=5441
  _TIMESTAMPTEST._serialized_start=5444
  _TIMESTAMPTEST._serialized_end=5984
  _MESSAGEDISABLEDTEST._serialized_start=5987
  _MESSAGEDISABLEDTEST._serialized_end=6121
  _MESSAGEIGNOREDTEST._serialized_start=6124
  _MESSAGEIGNOREDTEST._serialized_end=6257
# @@protoc_insertion_point(module_scope)
